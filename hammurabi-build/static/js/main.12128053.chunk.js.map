{"version":3,"sources":["api.js","PickComments/Comment.js","estimate.js","PickComments/FakeComment.js","PickComments/index.js","SelectThread.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["apiurl","getSongs","fetch","then","r","json","Comment","React","Component","handlePress","e","stopPropagation","propagateHtmlChange","val","this","props","comment","data","body_html","onChange","propagateEnableChange","enabled","render","_this$props","react_default","a","createElement","className","type","checked","bind","onClick","score","Math","round","gildings","gid_3","src","alt","width","gid_2","gid_1","lib_default","style","display","onKeyDown","theme","value","Array","isArray","replies","map","d","Comment_Comment","key","author","outroLen","transitionLen","estimateCommentHtml","noTags","replace","trim","splits","str","split","filter","length","words","estimate","estimateComment","FakeComment","dangerouslySetInnerHTML","__html","rep","FakeComment_FakeComment","PickComments","constructor","super","mapping","newcomment","Object","assign","settings","comments","state","current","tooTall","height","onSubmit","handle","toggleCurrent","handleKeyEvent","fakecomments","createRef","code","goPrev","goNext","indexOf","num","parseInt","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","setState","recFilter","commentArr","h","filt","onSelection","id","chosen","has","set","add","commentNum","currentNum","reqComment","traverseOnce","i","res","opt","forceUpdate","toMinSec","seconds","fullMins","floor","restSecs","slice","calculateTotalTime","recAdd","fullHtml","reduce","b","commentTimes","getFull","onCurrentCommentChange","componentDidUpdate","clientHeight","selectedComments","_estimateCommentHtml","PickComments_Comment","disabled","max","target","ref","src_PickComments_FakeComment","Thread","input","preventDefault","thread","pattern","_thread$match","match","_thread$match2","slicedToArray","onlythread","placeholder","autoFocus","Settings","song","songs","changeSong","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stage","question","processed","options","_this2","getThread","commentData","console","log","questionData","method","body","JSON","stringify","sendToRender","SelectThread","fetchThread","src_PickComments_0","commentsDone","src_Settings","addSettings","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0NAAIA,EAAgC,4BAOzBC,EAAW,WACrB,OAAOC,MAAMF,EAAS,cACpBG,KAAK,SAAAC,GAAC,OAAIA,EAAEC,mCCLf,MAAMC,UAAgBC,IAAMC,UAC3BC,YAAYC,GACXA,EAAEC,kBAEHC,oBAAoBC,GACnBC,KAAKC,MAAMC,QAAQC,KAAKC,UAAYL,EACpCC,KAAKC,MAAMI,WAEZC,wBACCN,KAAKC,MAAMC,QAAQK,SAAWP,KAAKC,MAAMC,QAAQK,QACjDP,KAAKC,MAAMI,WAEZG,SAAS,IAAAC,EACoBT,KAAKC,MAA3BC,EADEO,EACFP,QAASG,EADPI,EACOJ,SACf,OACCK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWC,KAAK,WAAWC,QAASb,EAAQK,QAASF,SAAUL,KAAKM,sBAAsBU,KAAKhB,QAChHU,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKK,QAASjB,KAAKM,sBAAsBU,KAAKhB,OAC7CU,EAAAC,EAAAC,cAAA,YAAOV,EAAQC,KAAKe,MAAQ,IAAMC,KAAKC,MAAMlB,EAAQC,KAAKe,MAAQ,KAAO,GAAM,IAAMhB,EAAQC,KAAKe,MAAlG,WACAR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWX,EAAQC,KAAKkB,SAASC,MAAQ,GACxDZ,EAAAC,EAAAC,cAAA,OAAKW,IAAI,oFAAoFC,IAAI,WAAWC,MAAO,KAClHvB,EAAQC,KAAKkB,SAASC,MAAQ,GAAKpB,EAAQC,KAAKkB,SAASC,OAC3DZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWX,EAAQC,KAAKkB,SAASK,MAAQ,GACxDhB,EAAAC,EAAAC,cAAA,OAAKW,IAAI,gFAAgFC,IAAI,OAAOC,MAAO,KAC1GvB,EAAQC,KAAKkB,SAASK,MAAQ,GAAKxB,EAAQC,KAAKkB,SAASK,OAC3DhB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWX,EAAQC,KAAKkB,SAASM,MAAQ,GACxDjB,EAAAC,EAAAC,cAAA,OAAKW,IAAI,kFAAkFC,IAAI,SAASC,MAAO,KAC9GvB,EAAQC,KAAKkB,SAASM,MAAQ,GAAKzB,EAAQC,KAAKkB,SAASM,QAE5DjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,MAAO,CAAEC,QAAS,gBAAkBC,UAAW/B,KAAKL,YAAaqC,MAAO,KAAMC,MAAO/B,EAAQC,KAAKC,UAAWC,SAAUL,KAAKF,oBAAoBkB,KAAKhB,QAChKkC,MAAMC,QAAQjC,EAAQC,KAAKiC,UAAYlC,EAAQC,KAAKiC,QAAQC,IAAIC,GAAK5B,EAAAC,EAAAC,cAAC2B,EAAD,CAASC,IAAKF,EAAEnC,KAAKsC,OAAQvC,QAASoC,EAAGjC,SAAUA,QAO/Gb,eClCf,IAAIkD,EAAW,OACXC,EAAgB,KAiBb,SAASC,EAAoB1C,GACnC,IAAI2C,EAAS3C,EAAQ4C,QAAQ,SAAU,IAAIC,OACvCC,GAjBgBC,EAiBKJ,EAhBlBI,EACLC,MAAM,gCACNC,OAAOb,GAAKA,EAAEQ,QAAQ,SAAU,KAAKC,OAAOK,OAAS,IActBA,OAjBlC,IAAqBH,EAkBpB,IAAII,EAAQR,EAAOC,QAAQ,SAAU,IAAII,MAAM,QAAQE,OAGvD,MAAO,CACNC,QACAL,SACAM,SAbK,SAAyBN,EAAQK,GACvC,MAAgB,mBAATL,EAAuC,kBAARK,EAOvBE,CAAgBP,EAAQK,WC1BxC,MAAMG,UAAoB/D,IAAMC,UAC/Bc,SAAS,IACFN,EAAYF,KAAKC,MAAjBC,QACN,OACCQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAK6C,wBAAyB,CAAEC,OAAQxD,EAAQC,KAAKC,aAEpDF,EAAQC,KAAKiC,SACblC,EAAQC,KAAKiC,QAAQe,QACrBjD,EAAQC,KAAKiC,QACXe,OAAO7D,GAAKA,EAAEiB,SACd8B,IAAIsB,GAAOjD,EAAAC,EAAAC,cAACgD,EAAD,CAAapB,IAAKtC,EAAQC,KAAKsC,OAAQvC,QAASyD,OAMnDH,QCiMAK,MA/Mf,cAA2BpE,IAAMC,UAChCoE,YAAY7D,GACX8D,MAAM9D,GAGN,IAAI+D,EAAU9D,IACb,IAAI+D,EAAaC,OAAOC,OAAO,GAAIjE,GAMnC,OAJIgC,MAAMC,QAAQ8B,EAAW7B,WAC5B6B,EAAW7B,QAAU6B,EAAW7B,QAAQC,IAAI2B,IAGtC,CACNzD,SAAS,EACTJ,KAAM8D,IAIJG,EAAWnE,EAAMoE,SAAShC,IAAI2B,GAElChE,KAAKsE,MAAQ,CAAEC,QAAS,EAAGH,WAAUI,SAAS,EAAOC,OAAQ,GAC7DzE,KAAK0E,SAAW1E,KAAK0E,SAAS1D,KAAKhB,MACnCA,KAAK2E,OAAS3E,KAAK2E,OAAO3D,KAAKhB,MAC/BA,KAAK4E,cAAgB5E,KAAK4E,cAAc5D,KAAKhB,MAC7CA,KAAK6E,eAAiB7E,KAAK6E,eAAe7D,KAAKhB,MAE/CA,KAAK8E,aAAerF,IAAMsF,YAE3BF,eAAejF,GACd,OAAQA,EAAEoF,MACT,IAAK,OACL,IAAK,YACJhF,KAAKiF,SACL,MACD,IAAK,OACL,IAAK,aACJjF,KAAKkF,SACL,MACD,IAAK,QACJlF,KAAK0E,WACL,MACD,QACC,GAAgC,IAA5B9E,EAAEoF,KAAKG,QAAQ,SAAgB,CAClC,IAAIC,EAAMC,SAASzF,EAAEoF,KAAKlC,QAAQ,QAAS,KAC3C9C,KAAK4E,cAAcQ,KAIvBE,oBACCC,OAAOC,iBAAiB,UAAWxF,KAAK6E,gBAEzCY,uBACCF,OAAOG,oBAAoB,UAAW1F,KAAK6E,gBAE5CI,SACKjF,KAAKsE,MAAMC,QAAU,GACxBvE,KAAK2F,SAAS,CAAEpB,QAASvE,KAAKsE,MAAMC,QAAU,IAGhDW,SACKlF,KAAKsE,MAAMC,QAAUvE,KAAKsE,MAAMF,SAAShB,OAAS,GACrDpD,KAAK2F,SAAS,CAAEpB,QAASvE,KAAKsE,MAAMC,QAAU,IAGhDqB,UAAUC,GAST,OARWA,EAAW1C,OAAO2C,GAAKA,EAAEvF,SAClC8B,IAAIC,GAAKA,EAAEnC,MACXkC,IAAIC,IACAA,EAAEF,UACLE,EAAEF,QAAUpC,KAAK4F,UAAUtD,EAAEF,UAEvBE,IAIVoC,WACC,IAAIqB,EAAO/F,KAAK4F,UAAU5F,KAAKsE,MAAMF,UACrCpE,KAAKC,MAAM+F,YAAYD,GAExBpB,OAAOsB,GACFjG,KAAKsE,MAAM4B,OAAOC,IAAIF,GACzBjG,KAAKsE,MAAM4B,OAAOE,IAAIH,GAEtBjG,KAAKsE,MAAM4B,OAAOG,IAAIJ,GAEvBjG,KAAK2F,SAAS,CACbO,OAAQlG,KAAKsE,MAAM4B,SAGrBtB,cAAc0B,GACb,IAAIF,EAAMpG,KAAKsE,MAAMF,SAErB,GAAIkC,EAAY,CACf,IAAIC,EAAa,EAmBbC,EAhBJ,SAASC,EAAavG,GAErB,KADAqG,IACmBD,EAClB,OAAOpG,EAER,GAAIgC,MAAMC,QAAQjC,EAAQC,KAAKiC,SAC9B,IAAK,IAAIsE,EAAI,EAAGA,EAAIxG,EAAQC,KAAKiC,QAAQgB,OAAQsD,IAAK,CAErD,IAAIC,EAAMF,EADMvG,EAAQC,KAAKiC,QAAQsE,IAErC,GAAIC,EACH,OAAOA,GAMMF,CAAaL,EAAIpG,KAAKsE,MAAMC,UAC7C,IAAKiC,EACJ,OAEDA,EAAWjG,SAAWiG,EAAWjG,YAC3B,CACN,IAAIqG,EAAMR,EAAIpG,KAAKsE,MAAMC,SACzBqC,EAAIrG,SAAWqG,EAAIrG,QACnB6F,EAAIpG,KAAKsE,MAAMC,SAAWqC,EAG3B5G,KAAK6G,cAEL7G,KAAK2F,SAAS,CAAEvB,SAAUgC,IAE3BU,SAASC,GACR,IAAIC,EAAW7F,KAAK8F,MAAMF,EAAU,IAChCG,GAAY,KAAO/F,KAAKC,MAAM2F,EAAU,GAAKC,IAAWG,OAAO,GAEnE,UADY,KAAOH,GAAUG,OAAO,MAClBD,IAEnBE,qBACC,IAAIC,EAASnH,IACZ,IAAIoH,EAAWpH,EAAQC,KAAKC,UAS5B,OAPI8B,MAAMC,QAAQjC,EAAQC,KAAKiC,WAC9BkF,GAAYpH,EAAQC,KAAKiC,QACvBe,OAAO7D,GAAKA,EAAEiB,SACd8B,IAAIgF,GACJE,OAAO,CAAC5G,EAAG6G,IAAM7G,EAAI6G,EAAG,KAGpBF,GAEJG,EAAezH,KAAKsE,MAAMF,SAC5BjB,OAAOb,GAAKA,EAAE/B,SACd8B,IAAIgF,GACJhF,IAAImF,GAAK5E,EAAoB4E,GAAGlE,UAElC,OAAOnC,KAAKC,MAAM,IF7Ib,SAAiBqG,GAEvB,OADeA,EAAaF,OAAO,CAAC5G,EAAG6G,IAAM7G,EAAI6G,EAAG,GAClC9E,EAAWC,EAAgB8E,EAAarE,OE2IjCsE,CAAQD,IAAiB,IAElDE,uBAAuB/H,GAQtBI,KAAK2F,SAAS,CAAEvB,SAAUpE,KAAKsE,MAAMF,WAEtCwD,qBACC,IAAInD,EAASzE,KAAK8E,aAAaP,QAAQsD,aAEvC7H,KAAKsE,MAAME,QAAUC,EADX,IAEVzE,KAAKsE,MAAMG,OAASA,EAErBjE,SAIC,IAAIN,EAAUF,KAAKsE,MAAMF,SAASpE,KAAKsE,MAAMC,SACzCuD,EAAmB9H,KAAKsE,MAAMF,SAASjB,OAAOb,GAAKA,EAAE/B,SAAS6C,OAL1D2E,EAM0BnF,EAAoB1C,EAAQC,KAAKC,WACnE,OAPQ2H,EAMFzE,SANEyE,EAMQ1E,MANR0E,EAMe/E,OAEtBtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAACoH,EAAD,CAAS9H,QAASA,EAASG,SAAUL,KAAK2H,uBAAuB3G,KAAKhB,SAEvEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAWC,QAASf,KAAKsE,MAAMF,SAASpE,KAAKsE,MAAMC,SAAShE,QAASF,SAAU,IAAML,KAAK4E,cAAc5D,KAAKhB,KAAxBA,CAA8B,KADhI,UAIAU,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKsE,MAAME,SAAW,WAAtC,WAA0DxE,KAAKsE,MAAMG,OAArE,eAED/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,UAAQqH,SAAUjI,KAAKsE,MAAMC,SAAW,EAAGtD,QAASjB,KAAKiF,OAAOjE,KAAKhB,OAArE,QACAU,EAAAC,EAAAC,cAAA,SAAOiB,MAAO,CAAEJ,MAAO,IAAMX,KAAK,SAASmB,MAAOjC,KAAKsE,MAAMC,QAAU,EAAGlE,SAAUT,GAAKI,KAAK2F,SAAS,CAAEpB,QAASpD,KAAK+G,IAAI,EAAG7C,SAASzF,EAAEuI,OAAOlG,OAAS,GAAK,OAC9JvB,EAAAC,EAAAC,cAAA,UAAQqH,SAAUjI,KAAKsE,MAAMC,QAAUvE,KAAKsE,MAAMF,SAAShB,OAAQnC,QAASjB,KAAKkF,OAAOlE,KAAKhB,OAA7F,SAEDU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,2BAAmBZ,KAAK8G,SAAS9G,KAAKoH,sBAAtC,KAA+DU,EAA/D,IAAuG,IAArBA,EAAyB,UAAY,WAAvH,aACApH,EAAAC,EAAAC,cAAA,UAAQK,QAASjB,KAAK0E,UAAtB,YAGFhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBuH,IAAKpI,KAAK8E,cACzCpE,EAAAC,EAAAC,cAACyH,EAAD,CAAanI,QAASA,gBCvKZoI,MAtCf,cAAqB7I,IAAMC,UAC1BoE,YAAY7D,GACX8D,MAAM9D,GACND,KAAKsE,MAAQ,CACZiE,MAAO,IAGT7D,SAAS9E,GACRA,EAAE4I,iBAEF,IAAIC,EAASzI,KAAKsE,MAAMiE,MAExB,IAAoC,IAAhCE,EAAOtD,QAAQ,YAAoB,CACtC,IAAIuD,EAAU,wBADwBC,EAEvBF,EAAOG,MAAMF,GAFUG,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,GAAAE,EAAA,GAGtCJ,EAHsCI,EAAA,GAMvC,IAAIE,EAAaN,EAAO3F,QAAQ,WAAY,IAE5C9C,KAAKC,MAAM+F,YAAY+C,GAExBpE,OAAO/E,GACNI,KAAK2F,SAAS,CAAE4C,MAAO3I,EAAEuI,OAAOlG,QAEjCzB,SACC,OACCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAM8D,SAAU1E,KAAK0E,SAAS1D,KAAKhB,OAClCU,EAAAC,EAAAC,cAAA,SAAOqB,MAAOjC,KAAKsE,MAAMiE,MAAOlI,SAAUL,KAAK2E,OAAO3D,KAAKhB,MAAOgJ,YAAY,uBAAuBC,WAAS,IAC9GvI,EAAAC,EAAAC,cAAA,wBCiBUsI,MA/Cf,cAAuBzJ,IAAMC,UAC5BoE,YAAY7D,GACX8D,MAAM9D,GAEND,KAAKsE,MAAQ,CAAE6E,KAAM,KAAMC,MAAO,MAElCjK,IAAWE,KAAK+J,IACfpJ,KAAK2F,SAAS,CAAEyD,QAAOD,KAAMC,EAAM,OAGrC1E,SAAS9E,GACRA,EAAE4I,iBACFxI,KAAKC,MAAM+F,YAAY,CACtBmD,KAAMnJ,KAAKsE,MAAM6E,OAGnBE,WAAWzJ,GACVI,KAAK2F,SAAS,CACbwD,KAAMvJ,EAAEuI,OAAOlG,QAGjBzB,SAMC,OACCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,QAAM8D,SAAU1E,KAAK0E,SAAS1D,KAAKhB,OAClCU,EAAAC,EAAAC,cAAA,WAEEZ,KAAKsE,MAAM8E,OACX1I,EAAAC,EAAAC,cAAA,UAAQP,SAAUL,KAAKqJ,WAAWrI,KAAKhB,OACrCA,KAAKsE,MAAM8E,MAAM/G,IAAI8G,GAAQzI,EAAAC,EAAAC,cAAA,UAAQ4B,IAAK2G,GAAOA,MAIrDzI,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,UAAb,mCCoBSwI,cAtDd,SAAAA,EAAYrJ,GAAO,IAAAsJ,EAAA,OAAArF,OAAAsF,EAAA,EAAAtF,CAAAlE,KAAAsJ,IAClBC,EAAArF,OAAAuF,EAAA,EAAAvF,CAAAlE,KAAAkE,OAAAwF,EAAA,EAAAxF,CAAAoF,GAAAK,KAAA3J,KAAMC,KACDqE,MAAQ,CAAEsF,MAAO,EAAGvF,SAAU,GAAIwF,SAAU,KAAMC,UAAW,KAAMC,QAAS,CAAEZ,KAAM,OAFvEI,2EAIPd,GAAQ,IAAAuB,EAAAhK,MPVE,SAAUyI,GAChC,OAAOrJ,MAAMF,EAAS,eAAiBuJ,GACrCpJ,KAAK,SAAAC,GAAC,OAAIA,EAAEC,UOSb0K,CAAUxB,GACRpJ,KAAK,SAAAE,GACLyK,EAAKrE,SAAS,CACbkE,SAAUtK,EAAK,GACf8E,SAAU9E,EAAK,GACfqK,MAAO,2CAIEM,GACZC,QAAQC,IAAIF,GACZlK,KAAK2F,SAAS,CAAEmE,UAAWI,EAAaN,MAAO,wCAEpCG,GACXI,QAAQC,IAAIL,GACZ/J,KAAK2F,SAAS,CAAEoE,UAASH,MAAO,IPhBR,SAAUS,EAAcH,EAAaH,GACvD3K,MAAMF,EAAS,gBAAiB,CACtCoL,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACpBJ,eACAH,cACAH,cAGA1K,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SOSbmL,CAAa1K,KAAKsE,MAAMuF,SAAU7J,KAAKsE,MAAMwF,UAAWC,oCAGxD,OAAyB,IAArB/J,KAAKsE,MAAMsF,MAEblJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC+J,EAAD,CAAc3E,YAAahG,KAAK4K,YAAY5J,KAAKhB,SAGpB,IAArBA,KAAKsE,MAAMsF,MAEpBlJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACiK,EAAD,CAAc7E,YAAahG,KAAK8K,aAAa9J,KAAKhB,MAAOqE,SAAUrE,KAAKsE,MAAMD,YAGjD,IAArBrE,KAAKsE,MAAMsF,MAEpBlJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACmK,EAAD,CAAU/E,YAAahG,KAAKgL,YAAYhK,KAAKhB,SAGhB,IAArBA,KAAKsE,MAAMsF,MAEpBlJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,yCAJI,SA5CSnB,IAAMC,WCKJuL,QACW,cAA7B1F,OAAO2F,SAASC,UAEe,UAA7B5F,OAAO2F,SAASC,UAEhB5F,OAAO2F,SAASC,SAASvC,MACvB,2DCbNwC,IAAS5K,OAAOE,EAAAC,EAAAC,cAACyK,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrM,KAAK,SAAAsM,GACjCA,EAAaC","file":"static/js/main.12128053.chunk.js","sourcesContent":["let apiurl = process.env.NODE_ENV ? 'http://localhost:5566/api' : '/api' // use current web page as host\n\nexport let getThread = function (thread) {\n\treturn fetch(apiurl + '/get-thread/' + thread)\n\t\t.then(r => r.json())\n}\n\nexport let getSongs = function () {\n\treturn fetch(apiurl + '/get-songs')\n\t\t.then(r => r.json())\n}\n\nexport let sendToRender = function (questionData, commentData, options) {\n\treturn fetch(apiurl + '/render-video', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tquestionData,\n\t\t\tcommentData,\n\t\t\toptions,\n\t\t})\n\t})\n\t\t.then(r => r.json())\n}","import React from 'react'\n\nimport ReactQuill from 'react-quill'\n\nclass Comment extends React.Component {\n\thandlePress(e) {\n\t\te.stopPropagation()\n\t}\n\tpropagateHtmlChange(val) {\n\t\tthis.props.comment.data.body_html = val\n\t\tthis.props.onChange()\n\t}\n\tpropagateEnableChange() {\n\t\tthis.props.comment.enabled = !this.props.comment.enabled\n\t\tthis.props.onChange()\n\t}\n\trender() {\n\t\tlet { comment, onChange } = this.props\n\t\treturn (\n\t\t\t<div className=\"Comment\">\n\t\t\t\t<input className=\"left-box\" type=\"checkbox\" checked={comment.enabled} onChange={this.propagateEnableChange.bind(this)} />\n\t\t\t\t<div>\n\t\t\t\t\t<div onClick={this.propagateEnableChange.bind(this)}>\n\t\t\t\t\t\t<span>{comment.data.score > 1e3 ? Math.round(comment.data.score / 1e2) / 1e1 + 'k' : comment.data.score} points</span>\n\t\t\t\t\t\t<span className=\"gilding\">{comment.data.gildings.gid_3 > 0 &&\n\t\t\t\t\t\t\t<img src=\"https://www.redditstatic.com/desktop2x/img/gold/badges/award-platinum-cartoon.png\" alt=\"platinum\" width={16} />\n\t\t\t\t\t\t}{comment.data.gildings.gid_3 > 1 && comment.data.gildings.gid_3}</span>\n\t\t\t\t\t\t<span className=\"gilding\">{comment.data.gildings.gid_2 > 0 &&\n\t\t\t\t\t\t\t<img src=\"https://www.redditstatic.com/desktop2x/img/gold/badges/award-gold-cartoon.png\" alt=\"gold\" width={16} />\n\t\t\t\t\t\t}{comment.data.gildings.gid_2 > 1 && comment.data.gildings.gid_2}</span>\n\t\t\t\t\t\t<span className=\"gilding\">{comment.data.gildings.gid_1 > 0 &&\n\t\t\t\t\t\t\t<img src=\"https://www.redditstatic.com/desktop2x/img/gold/badges/award-silver-cartoon.png\" alt=\"silver\" width={16} />\n\t\t\t\t\t\t}{comment.data.gildings.gid_1 > 1 && comment.data.gildings.gid_1}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ReactQuill style={{ display: 'inline-block' }} onKeyDown={this.handlePress} theme={null} value={comment.data.body_html} onChange={this.propagateHtmlChange.bind(this)} />\n\t\t\t\t\t{Array.isArray(comment.data.replies) && comment.data.replies.map(d => <Comment key={d.data.author} comment={d} onChange={onChange} />)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Comment;","// ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 transition.mkv\n\n// Outro 13.163 s\n// Transition bright 0.843 s\n// Transition 0.741 s\n// Number of splits * X\n// Number of words * Y\n\nlet outroLen = 13.163\nlet transitionLen = 0.741\n\nfunction splitString(str) {\n\treturn str\n\t\t.split(/<br>|(.+?[\\.,?!]+[\"'\\)\\s]+)/g) // eslint-disable-line no-useless-escape\n\t\t.filter(d => d.replace('\\u200B', ' ').trim().length > 0)\n}\n\nexport function getFull(commentTimes) {\n\tlet comments = commentTimes.reduce((a, b) => a + b, 0)\n\treturn comments + outroLen + transitionLen * commentTimes.length\n}\n\nexport function estimateComment(splits, words) {\n\treturn splits * 0.38152203637725923 + words * 0.2767486833003453\n}\n\nexport function estimateCommentHtml(comment) {\n\tlet noTags = comment.replace(/<.+?>/g, '').trim()\n\tlet splits = splitString(noTags).length\n\tlet words = noTags.replace(/<.+?>/g, '').split(/\\s+/g).length\n\tlet estimate = estimateComment(splits, words)\n\n\treturn {\n\t\twords,\n\t\tsplits,\n\t\testimate,\n\t}\n}","import React from 'react'\n\nimport './FakeComment.css'\n\nclass FakeComment extends React.Component {\n\trender() {\n\t\tlet { comment } = this.props\n\t\treturn (\n\t\t\t<div className=\"FakeComment\">\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: comment.data.body_html }}>\n\t\t\t\t</div>\n\t\t\t\t{comment.data.replies &&\n\t\t\t\t\tcomment.data.replies.filter &&\n\t\t\t\t\tcomment.data.replies\n\t\t\t\t\t\t.filter(r => r.enabled)\n\t\t\t\t\t\t.map(rep => <FakeComment key={comment.data.author} comment={rep} />)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default FakeComment;","import React from 'react'\nimport Comment from './Comment'\nimport './index.css'\nimport { estimateCommentHtml, getFull } from '../estimate'\n\nimport FakeComment from './FakeComment';\n\nclass PickComments extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\t// Put the comments into a map for easier indexing later\n\t\tlet mapping = comment => {\n\t\t\tlet newcomment = Object.assign({}, comment)\n\n\t\t\tif (Array.isArray(newcomment.replies)) {\n\t\t\t\tnewcomment.replies = newcomment.replies.map(mapping)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tdata: newcomment\n\t\t\t}\n\t\t}\n\n\t\tlet settings = props.comments.map(mapping)\n\n\t\tthis.state = { current: 0, settings, tooTall: false, height: 0 }\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t\tthis.handle = this.handle.bind(this)\n\t\tthis.toggleCurrent = this.toggleCurrent.bind(this)\n\t\tthis.handleKeyEvent = this.handleKeyEvent.bind(this)\n\n\t\tthis.fakecomments = React.createRef()\n\t}\n\thandleKeyEvent(e) {\n\t\tswitch (e.code) {\n\t\t\tcase \"KeyA\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tthis.goPrev()\n\t\t\t\tbreak;\n\t\t\tcase \"KeyD\":\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tthis.goNext()\n\t\t\t\tbreak\n\t\t\tcase \"Enter\":\n\t\t\t\tthis.onSubmit()\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tif (e.code.indexOf('Digit') === 0) {\n\t\t\t\t\tlet num = parseInt(e.code.replace('Digit', ''))\n\t\t\t\t\tthis.toggleCurrent(num)\n\t\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyEvent)\n\t}\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyEvent)\n\t}\n\tgoPrev() {\n\t\tif (this.state.current > 0) {\n\t\t\tthis.setState({ current: this.state.current - 1 })\n\t\t}\n\t}\n\tgoNext() {\n\t\tif (this.state.current < this.state.settings.length - 1) {\n\t\t\tthis.setState({ current: this.state.current + 1 })\n\t\t}\n\t}\n\trecFilter(commentArr) {\n\t\tlet news = commentArr.filter(h => h.enabled)\n\t\t\t.map(d => d.data)\n\t\t\t.map(d => {\n\t\t\t\tif (d.replies) {\n\t\t\t\t\td.replies = this.recFilter(d.replies)\n\t\t\t\t}\n\t\t\t\treturn d\n\t\t\t})\n\t\treturn news\n\t}\n\tonSubmit() {\n\t\tlet filt = this.recFilter(this.state.settings)\n\t\tthis.props.onSelection(filt)\n\t}\n\thandle(id) {\n\t\tif (this.state.chosen.has(id)) {\n\t\t\tthis.state.chosen.set(id)\n\t\t} else {\n\t\t\tthis.state.chosen.add(id)\n\t\t}\n\t\tthis.setState({\n\t\t\tchosen: this.state.chosen,\n\t\t})\n\t}\n\ttoggleCurrent(commentNum) {\n\t\tlet set = this.state.settings\n\n\t\tif (commentNum) {\n\t\t\tlet currentNum = 0\n\n\t\t\t// Used for checking the N:th visible comment in the tree\n\t\t\tfunction traverseOnce(comment) {\n\t\t\t\tcurrentNum++\n\t\t\t\tif (currentNum === commentNum) {\n\t\t\t\t\treturn comment\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\t\t\tfor (let i = 0; i < comment.data.replies.length; i++) {\n\t\t\t\t\t\tconst element = comment.data.replies[i];\n\t\t\t\t\t\tlet res = traverseOnce(element)\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\treturn res\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet reqComment = traverseOnce(set[this.state.current])\n\t\t\tif (!reqComment) {\n\t\t\t\treturn // Could not find a comment with inputted number\n\t\t\t}\n\t\t\treqComment.enabled = !reqComment.enabled\n\t\t} else {\n\t\t\tlet opt = set[this.state.current]\n\t\t\topt.enabled = !opt.enabled\n\t\t\tset[this.state.current] = opt\n\t\t}\n\n\t\tthis.forceUpdate()\n\n\t\tthis.setState({ settings: set })\n\t}\n\ttoMinSec(seconds) {\n\t\tlet fullMins = Math.floor(seconds / 60) // No. full mins\n\t\tlet restSecs = ('00' + Math.round(seconds - 60 * fullMins)).slice(-2)\n\t\tlet mins = ('00' + fullMins).slice(-2)\n\t\treturn `${mins}:${restSecs}`\n\t}\n\tcalculateTotalTime() {\n\t\tlet recAdd = comment => {\n\t\t\tlet fullHtml = comment.data.body_html\n\n\t\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\t\tfullHtml += comment.data.replies\n\t\t\t\t\t.filter(r => r.enabled)\n\t\t\t\t\t.map(recAdd)\n\t\t\t\t\t.reduce((a, b) => a + b, '')\n\t\t\t}\n\n\t\t\treturn fullHtml\n\t\t}\n\t\tlet commentTimes = this.state.settings\n\t\t\t.filter(d => d.enabled)\n\t\t\t.map(recAdd)\n\t\t\t.map(b => estimateCommentHtml(b).estimate)\n\n\t\treturn Math.round(1e2 * getFull(commentTimes)) / 1e2\n\t}\n\tonCurrentCommentChange(e) {\n\t\t// let set = this.state.settings\n\n\t\t// let data = set[this.state.current].data\n\t\t// data.body_html = e\n\t\t// set[this.state.current].data = data\n\n\t\t// this.setState({ settings: set })\n\t\tthis.setState({ settings: this.state.settings })\n\t}\n\tcomponentDidUpdate() {\n\t\tlet height = this.fakecomments.current.clientHeight\n\t\tlet max = 1080 / 2.4\n\t\tthis.state.tooTall = height > max\n\t\tthis.state.height = height\n\t}\n\trender() {\n\t\t// Settings:\n\t\t// Enable\n\t\t// Keep edits\n\t\tlet comment = this.state.settings[this.state.current]\n\t\tlet selectedComments = this.state.settings.filter(d => d.enabled).length\n\t\tlet { estimate, words, splits } = estimateCommentHtml(comment.data.body_html)\n\t\treturn (\n\t\t\t<div className=\"Comments\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"top-comment\">\n\t\t\t\t\t\t<Comment comment={comment} onChange={this.onCurrentCommentChange.bind(this)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"options\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked={this.state.settings[this.state.current].enabled} onChange={() => this.toggleCurrent.bind(this)(1)} />\n\t\t\t\t\t\t\tEnable\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className={this.state.tooTall && 'tooTall'}>Height: {this.state.height} (max=450)</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<button disabled={this.state.current <= 0} onClick={this.goPrev.bind(this)}>Prev</button>\n\t\t\t\t\t\t<input style={{ width: 60 }} type=\"number\" value={this.state.current + 1} onChange={e => this.setState({ current: Math.max(0, parseInt(e.target.value) - 1 || 0) })} />\n\t\t\t\t\t\t<button disabled={this.state.current > this.state.settings.length} onClick={this.goNext.bind(this)}>Next</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<span>Total time: {this.toMinSec(this.calculateTotalTime())}, {selectedComments} {selectedComments === 1 ? 'comment' : 'comments'} selected</span>\n\t\t\t\t\t\t<button onClick={this.onSubmit}>Finish</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"fake-container\" ref={this.fakecomments}>\n\t\t\t\t\t<FakeComment comment={comment} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PickComments;","import React from 'react'\n\nclass Thread extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tinput: ''\n\t\t}\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault()\n\n\t\tlet thread = this.state.input\n\n\t\tif (thread.indexOf('comments') !== -1) {\n\t\t\tlet pattern = /\\/comments\\/([\\d\\w]+)/\n\t\t\tlet [_, res] = thread.match(pattern)\n\t\t\tthread = res\n\t\t}\n\n\t\tlet onlythread = thread.replace(/[^\\w\\d]/g, '')\n\n\t\tthis.props.onSelection(onlythread)\n\t}\n\thandle(e) {\n\t\tthis.setState({ input: e.target.value })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Thread\">\n\t\t\t\t<h1>Choose a thread</h1>\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<input value={this.state.input} onChange={this.handle.bind(this)} placeholder=\"Put thread ID or url\" autoFocus />\n\t\t\t\t\t<button>OK</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Thread;","import React from 'react'\nimport { getSongs } from './api';\n\nclass Settings extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = { song: null, songs: null }\n\n\t\tgetSongs().then(songs => {\n\t\t\tthis.setState({ songs, song: songs[0] })\n\t\t})\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault()\n\t\tthis.props.onSelection({\n\t\t\tsong: this.state.song,\n\t\t})\n\t}\n\tchangeSong(e) {\n\t\tthis.setState({\n\t\t\tsong: e.target.value,\n\t\t})\n\t}\n\trender() {\n\t\t// Settings:\n\t\t// Song\n\t\t// TODO: dark/light style\n\t\t// TODO: Multiple styles (different channels)\n\n\t\treturn (\n\t\t\t<div className=\"Thread\">\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.songs &&\n\t\t\t\t\t\t\t<select onChange={this.changeSong.bind(this)}>\n\t\t\t\t\t\t\t\t{this.state.songs.map(song => <option key={song}>{song}</option>)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button type=\"submit\">Send to the slaughterhouse</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Settings;","import React from 'react';\nimport { getThread, sendToRender } from './api';\nimport './App.css';\nimport PickComments from './PickComments/index';\nimport SelectThread from './SelectThread';\nimport Settings from './Settings';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { stage: 0, comments: [], question: null, processed: null, options: { song: null } }\n\t}\n\tfetchThread(thread) {\n\t\tgetThread(thread)\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestion: json[0],\n\t\t\t\t\tcomments: json[1],\n\t\t\t\t\tstage: 1,\n\t\t\t\t})\n\t\t\t})\n\t}\n\tcommentsDone(commentData) {\n\t\tconsole.log(commentData)\n\t\tthis.setState({ processed: commentData, stage: 2 })\n\t}\n\taddSettings(options) {\n\t\tconsole.log(options)\n\t\tthis.setState({ options, stage: 3 })\n\n\t\tsendToRender(this.state.question, this.state.processed, options)\n\t}\n\trender() {\n\t\tif (this.state.stage === 0) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<SelectThread onSelection={this.fetchThread.bind(this)} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.state.stage === 1) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<PickComments onSelection={this.commentsDone.bind(this)} comments={this.state.comments} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.state.stage === 2) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Settings onSelection={this.addSettings.bind(this)} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.state.stage === 3) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>rendering atm bro</h1>\n\t\t\t\t\t<p>You may close this tab</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}