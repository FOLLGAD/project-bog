{"version":3,"sources":["redux/store.js","api.js","PickComments/Comment.js","estimate.js","PickComments/FakeComment.js","redux/actions.js","PickComments/index.js","Question.js","SelectThread.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","comments","question","processed","stage","options","song","createStore","state","action","type","Object","assign","val","title","apiurl","getThread","thread","fetch","then","r","json","getSongs","sendToRender","questionData","commentData","console","log","method","body","JSON","stringify","Comment","React","Component","handlePress","e","stopPropagation","propagateHtmlChange","this","props","comment","data","body_html","onChange","propagateEnableChange","enabled","render","_this$props","react_default","a","createElement","className","checked","bind","onClick","style","color","marginRight","author","score","Math","round","gildings","gid_3","src","alt","width","gid_2","gid_1","lib_default","display","onKeyDown","theme","value","Array","isArray","replies","map","d","Comment_Comment","key","id","outroLen","transitionLen","FakeComment","dangerouslySetInnerHTML","__html","filter","rep","FakeComment_FakeComment","nextStage","setComments","content","connect","setProcessed","constructor","super","current","tooTall","height","onSubmit","handle","toggleCurrent","handleKeyEvent","fakecomments","createRef","code","goPrev","goNext","indexOf","num","parseInt","replace","componentDidMount","window","addEventListener","setState","length","filt","recFilter","commentArr","h","newS","chosen","has","set","add","commentNum","currentNum","reqComment","traverseOnce","i","res","opt","forceUpdate","toMinSec","seconds","fullMins","floor","restSecs","slice","calculateTotalTime","recAdd","fullHtml","reduce","b","commentTimes","noTags","trim","splits","str","split","words","estimate","estimateComment","estimateCommentHtml","getFull","onCurrentCommentChange","componentDidUpdate","clientHeight","selectedComments","PickComments_Comment","disabled","max","min","target","ref","src_PickComments_FakeComment","setTitle","preventDefault","fontFamily","Thread","input","pattern","_thread$match","match","_thread$match2","slicedToArray","onlythread","onSelection","placeholder","autoFocus","Settings","songs","changeSong","store","setQuestion","setStage","setOptions","fetchThread","mapping","newcomment","addSettings","SelectThread","Question","src_PickComments_0","src_Settings","fontSize","Boolean","location","hostname","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91d78a8a.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\nconst defaultState = {\n\tcomments: [],\n\tquestion: null,\n\tprocessed: null,\n\tstage: 0,\n\toptions: {\n\t\tsong: null,\n\t}\n}\n\nfunction state(state = defaultState, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_STAGE':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tstage: action.val,\n\t\t\t})\n\t\tcase 'INC_STAGE':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tstage: state.stage + action.val,\n\t\t\t})\n\t\tcase 'SET_COMMENTS':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tcomments: action.val,\n\t\t\t})\n\t\tcase 'SET_PROCESSED':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tprocessed: action.val,\n\t\t\t})\n\t\tcase 'SET_QUESTION':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tquestion: action.val,\n\t\t\t})\n\t\tcase 'SET_TITLE':\n\t\t\tlet question = Object.assign({}, state.question, { title: action.val })\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tquestion: question,\n\t\t\t})\n\t\tcase 'SET_OPTIONS':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\toptions: action.val,\n\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default createStore(state)","let apiurl = process.env.NODE_ENV ? 'http://localhost:5566/api' : '/api' // use current web page as host\n\nexport let getThread = function (thread) {\n\treturn fetch(apiurl + '/get-thread/' + thread)\n\t\t.then(r => r.json())\n}\n\nexport let getSongs = function () {\n\treturn fetch(apiurl + '/get-songs')\n\t\t.then(r => r.json())\n}\n\nexport let sendToRender = function (questionData, commentData, options) {\n\tconsole.log(options)\n\treturn fetch(apiurl + '/render-video', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tquestionData,\n\t\t\tcommentData,\n\t\t\toptions,\n\t\t})\n\t})\n\t\t.then(r => r.json())\n}","import React from 'react'\n\nimport ReactQuill from 'react-quill'\n\nclass Comment extends React.Component {\n\thandlePress(e) {\n\t\te.stopPropagation()\n\t}\n\tpropagateHtmlChange(val) {\n\t\tthis.props.comment.data.body_html = val\n\t\tthis.props.onChange()\n\t}\n\tpropagateEnableChange() {\n\t\tthis.props.comment.enabled = !this.props.comment.enabled\n\t\tthis.props.onChange()\n\t}\n\trender() {\n\t\tlet { comment, onChange } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"Comment\">\n\t\t\t\t<input className=\"left-box\" type=\"checkbox\" checked={comment.enabled} onChange={this.propagateEnableChange.bind(this)} />\n\t\t\t\t<div>\n\t\t\t\t\t<div onClick={this.propagateEnableChange.bind(this)}>\n\t\t\t\t\t\t<span style={{ color: \"blue\", marginRight: 5 }}>{comment.data.author}</span>\n\t\t\t\t\t\t<span>{comment.data.score > 1e3 ? Math.round(comment.data.score / 1e2) / 1e1 + 'k' : comment.data.score} points</span>\n\t\t\t\t\t\t<span className=\"gilding\">{comment.data.gildings.gid_3 > 0 &&\n\t\t\t\t\t\t\t<img src=\"https://www.redditstatic.com/desktop2x/img/gold/badges/award-platinum-cartoon.png\" alt=\"platinum\" width={16} />\n\t\t\t\t\t\t}{comment.data.gildings.gid_3 > 1 && comment.data.gildings.gid_3}</span>\n\t\t\t\t\t\t<span className=\"gilding\">{comment.data.gildings.gid_2 > 0 &&\n\t\t\t\t\t\t\t<img src=\"https://www.redditstatic.com/desktop2x/img/gold/badges/award-gold-cartoon.png\" alt=\"gold\" width={16} />\n\t\t\t\t\t\t}{comment.data.gildings.gid_2 > 1 && comment.data.gildings.gid_2}</span>\n\t\t\t\t\t\t<span className=\"gilding\">{comment.data.gildings.gid_1 > 0 &&\n\t\t\t\t\t\t\t<img src=\"https://www.redditstatic.com/desktop2x/img/gold/badges/award-silver-cartoon.png\" alt=\"silver\" width={16} />\n\t\t\t\t\t\t}{comment.data.gildings.gid_1 > 1 && comment.data.gildings.gid_1}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ReactQuill style={{ display: 'inline-block' }} onKeyDown={this.handlePress} theme={null} value={comment.data.body_html} onChange={this.propagateHtmlChange.bind(this)} />\n\t\t\t\t\t{Array.isArray(comment.data.replies) && comment.data.replies.map(d => <Comment key={d.data.id} comment={d} onChange={onChange} />)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Comment;","// ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 transition.mkv\n\n// Outro 13.163 s\n// Transition bright 0.843 s\n// Transition 0.741 s\n// Number of splits * X\n// Number of words * Y\n\nlet outroLen = 13.163\nlet transitionLen = 0.741\n\nfunction splitString(str) {\n\treturn str\n\t\t.split(/<br>|(.+?[\\.,?!]+[\"'\\)\\s]+)/g) // eslint-disable-line no-useless-escape\n\t\t.filter(d => d.replace('\\u200B', ' ').trim().length > 0)\n}\n\nexport function getFull(commentTimes) {\n\tlet comments = commentTimes.reduce((a, b) => a + b, 0)\n\treturn comments + outroLen + transitionLen * commentTimes.length\n}\n\nexport function estimateComment(splits, words) {\n\treturn splits * 0.38152203637725923 + words * 0.2767486833003453\n}\n\nexport function estimateCommentHtml(comment) {\n\tlet noTags = comment.replace(/<.+?>/g, '').trim()\n\tlet splits = splitString(noTags).length\n\tlet words = noTags.replace(/<.+?>/g, '').split(/\\s+/g).length\n\tlet estimate = estimateComment(splits, words)\n\n\treturn {\n\t\twords,\n\t\tsplits,\n\t\testimate,\n\t}\n}","import React from 'react'\n\nimport './FakeComment.css'\n\nclass FakeComment extends React.Component {\n\trender() {\n\t\tlet { comment } = this.props\n\t\treturn (\n\t\t\t<div className=\"FakeComment\">\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: comment.data.body_html }}>\n\t\t\t\t</div>\n\t\t\t\t{comment.data.replies &&\n\t\t\t\t\tcomment.data.replies.filter &&\n\t\t\t\t\tcomment.data.replies\n\t\t\t\t\t\t.filter(r => r.enabled)\n\t\t\t\t\t\t.map(rep => <FakeComment key={rep.data.id} comment={rep} />)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default FakeComment;","export const setProcessed = content => ({\n\ttype: 'SET_PROCESSED',\n\tval: content,\n})\nexport const setQuestion = content => ({\n\ttype: 'SET_QUESTION',\n\tval: content,\n})\nexport const setStage = content => ({\n\ttype: 'SET_STAGE',\n\tval: content,\n})\nexport const nextStage = () => ({\n\ttype: 'INC_STAGE',\n\tval: 1,\n})\nexport const prevStage = () => ({\n\ttype: 'INC_STAGE',\n\tval: -1,\n})\nexport const setComments = content => ({\n\ttype: 'SET_COMMENTS',\n\tval: content,\n})\nexport const setOptions = content => ({\n\ttype: 'SET_OPTIONS',\n\tval: content,\n})\nexport const setTitle = content => ({\n\ttype: 'SET_TITLE',\n\tval: content,\n})","import React from 'react'\nimport Comment from './Comment'\nimport './index.css'\nimport { estimateCommentHtml, getFull } from '../estimate'\n\nimport FakeComment from './FakeComment';\n\nimport { connect } from 'react-redux'\nimport { setProcessed, setComments, nextStage } from '../redux/actions'\n\nfunction recFilter(commentArr) {\n\tlet news = commentArr.filter(h => h.enabled)\n\t\t.map(d => d.data)\n\t\t.map(d => {\n\t\t\tlet newS = Object.assign({}, d)\n\t\t\tif (newS.replies) {\n\t\t\t\tnewS.replies = recFilter(newS.replies)\n\t\t\t}\n\t\t\treturn newS\n\t\t})\n\treturn news\n}\n\nclass PickComments extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = { current: 0, tooTall: false, height: 0 }\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t\tthis.handle = this.handle.bind(this)\n\t\tthis.toggleCurrent = this.toggleCurrent.bind(this)\n\t\tthis.handleKeyEvent = this.handleKeyEvent.bind(this)\n\n\t\tthis.fakecomments = React.createRef()\n\t}\n\thandleKeyEvent(e) {\n\t\tswitch (e.code) {\n\t\t\tcase \"KeyA\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tthis.goPrev()\n\t\t\t\tbreak;\n\t\t\tcase \"KeyD\":\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tthis.goNext()\n\t\t\t\tbreak\n\t\t\tcase \"Enter\":\n\t\t\t\tthis.onSubmit()\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tif (e.code.indexOf('Digit') === 0) {\n\t\t\t\t\tlet num = parseInt(e.code.replace('Digit', ''))\n\t\t\t\t\tthis.toggleCurrent(num)\n\t\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyEvent)\n\t}\n\tgoPrev() {\n\t\tif (this.state.current > 0) {\n\t\t\tthis.setState({ current: this.state.current - 1 })\n\t\t}\n\t}\n\tgoNext() {\n\t\tif (this.state.current < this.props.comments.length - 1) {\n\t\t\tthis.setState({ current: this.state.current + 1 })\n\t\t}\n\t}\n\tonSubmit() {\n\t\tlet filt = recFilter(this.props.comments)\n\n\t\tthis.props.setProcessed(filt)\n\t\tthis.props.nextStage()\n\t}\n\thandle(id) {\n\t\tif (this.state.chosen.has(id)) {\n\t\t\tthis.state.chosen.set(id)\n\t\t} else {\n\t\t\tthis.state.chosen.add(id)\n\t\t}\n\t\tthis.setState({\n\t\t\tchosen: this.state.chosen,\n\t\t})\n\t}\n\ttoggleCurrent(commentNum) {\n\t\tlet set = this.props.comments\n\n\t\tif (commentNum) {\n\t\t\tlet currentNum = 0\n\n\t\t\t// Used for checking the N:th visible comment in the tree\n\t\t\tfunction traverseOnce(comment) {\n\t\t\t\tcurrentNum++\n\t\t\t\tif (currentNum === commentNum) {\n\t\t\t\t\treturn comment\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\t\t\tfor (let i = 0; i < comment.data.replies.length; i++) {\n\t\t\t\t\t\tconst element = comment.data.replies[i];\n\t\t\t\t\t\tlet res = traverseOnce(element)\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\treturn res\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet reqComment = traverseOnce(set[this.state.current])\n\t\t\tif (!reqComment) {\n\t\t\t\treturn // Could not find a comment with inputted number\n\t\t\t}\n\t\t\treqComment.enabled = !reqComment.enabled\n\t\t} else {\n\t\t\tlet opt = set[this.state.current]\n\t\t\topt.enabled = !opt.enabled\n\t\t\tset[this.state.current] = opt\n\t\t}\n\n\t\t// Rerender and update estimated height\n\t\tthis.forceUpdate()\n\t\tthis.forceUpdate()\n\n\t\tthis.props.setComments(set)\n\t}\n\ttoMinSec(seconds) {\n\t\tlet fullMins = Math.floor(seconds / 60) // No. full mins\n\t\tlet restSecs = ('00' + Math.round(seconds - 60 * fullMins)).slice(-2)\n\t\tlet mins = ('00' + fullMins).slice(-2)\n\t\treturn `${mins}:${restSecs}`\n\t}\n\tcalculateTotalTime() {\n\t\tlet recAdd = comment => {\n\t\t\tlet fullHtml = comment.data.body_html\n\n\t\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\t\tfullHtml += comment.data.replies\n\t\t\t\t\t.filter(r => r.enabled)\n\t\t\t\t\t.map(recAdd)\n\t\t\t\t\t.reduce((a, b) => a + b, '')\n\t\t\t}\n\n\t\t\treturn fullHtml\n\t\t}\n\t\tlet commentTimes = this.props.comments\n\t\t\t.filter(d => d.enabled)\n\t\t\t.map(recAdd)\n\t\t\t.map(b => estimateCommentHtml(b).estimate)\n\n\t\treturn Math.round(1e2 * getFull(commentTimes)) / 1e2\n\t}\n\tonCurrentCommentChange(comment) {\n\t\t// let set = this.props.comments\n\n\t\t// let data = set[this.state.current].data\n\t\t// data.body_html = e\n\t\t// set[this.state.current].data = data\n\n\t\t// this.setState({ settings: set })\n\t\tthis.props.setComments(this.props.comments)\n\t}\n\tcomponentDidUpdate() {\n\t\tlet height = this.fakecomments.current.clientHeight\n\t\tlet max = 1080 / 2.4\n\t\tthis.state.tooTall = height > max\n\t\tthis.state.height = height\n\t}\n\trender() {\n\t\tlet comment = this.props.comments[this.state.current]\n\t\tlet selectedComments = this.props.comments.filter(d => d.enabled).length\n\t\t// let { estimate, words, splits } = estimateCommentHtml(comment.data.body_html)\n\t\treturn (\n\t\t\t<div className=\"Comments\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"top-comment\">\n\t\t\t\t\t\t<Comment comment={comment} onChange={this.onCurrentCommentChange.bind(this)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"options\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked={comment.enabled} onChange={() => this.toggleCurrent.bind(this)(1)} />\n\t\t\t\t\t\t\tEnable\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className={this.state.tooTall ? 'tooTall' : ''}>Height: {this.state.height} (max=450)</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<button disabled={this.state.current <= 0} onClick={this.goPrev.bind(this)}>Prev</button>\n\t\t\t\t\t\t<input style={{ width: 60 }} type=\"number\" max={this.props.comments.length} min={1} value={this.state.current + 1} onChange={e => this.setState({ current: Math.max(0, parseInt(e.target.value) - 1 || 0) })} />\n\t\t\t\t\t\t<button disabled={this.state.current > this.props.comments.length} onClick={this.goNext.bind(this)}>Next</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<span>Total time: {this.toMinSec(this.calculateTotalTime())}, {selectedComments} {selectedComments === 1 ? 'comment' : 'comments'} selected</span>\n\t\t\t\t\t\t<button onClick={this.onSubmit}>Finish</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"fake-container\" ref={this.fakecomments}>\n\t\t\t\t\t<FakeComment comment={comment} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(state => ({\n\tcomments: state.comments,\n}), { setProcessed, setComments, nextStage })(PickComments);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setTitle, nextStage } from './redux/actions';\n\nclass PickComments extends React.Component {\n\tonSubmit(e) {\n\t\te.preventDefault()\n\t\tthis.props.nextStage()\n\t}\n\tonChange(e) {\n\t\tthis.props.setTitle(e.target.value)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Question\">\n\t\t\t\t<h1>Edit question</h1>\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<textarea className=\"question-title\" onChange={this.onChange.bind(this)} style={{ width: 500, fontFamily: 'Noto Sans' }}>\n\t\t\t\t\t\t{this.props.title}\n\t\t\t\t\t</textarea>\n\t\t\t\t\t<br />\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(state => ({\n\ttitle: state.question.title,\n}), { setTitle, nextStage })(PickComments);","import React from 'react'\n\nclass Thread extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tinput: ''\n\t\t}\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault()\n\n\t\tlet thread = this.state.input\n\n\t\tif (thread.indexOf('comments') !== -1) {\n\t\t\tlet pattern = /\\/comments\\/([\\d\\w]+)/\n\t\t\tlet [_, res] = thread.match(pattern)\n\t\t\tthread = res\n\t\t}\n\n\t\tlet onlythread = thread.replace(/[^\\w\\d]/g, '')\n\n\t\tthis.props.onSelection(onlythread)\n\t}\n\thandle(e) {\n\t\tthis.setState({ input: e.target.value })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Thread\">\n\t\t\t\t<h1>Choose a thread</h1>\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<input value={this.state.input} onChange={this.handle.bind(this)} placeholder=\"Put thread ID or url\" autoFocus />\n\t\t\t\t\t<button>OK</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Thread;","import React from 'react'\nimport { getSongs } from './api';\n\nclass Settings extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = { song: null, songs: null }\n\n\t\tgetSongs().then(songs => {\n\t\t\tthis.setState({ songs, song: songs[0] })\n\t\t})\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault()\n\t\tthis.props.onSelection({\n\t\t\tsong: this.state.song,\n\t\t})\n\t}\n\tchangeSong(e) {\n\t\tthis.setState({\n\t\t\tsong: e.target.value,\n\t\t})\n\t}\n\trender() {\n\t\t// Settings:\n\t\t// Song\n\t\t// TODO: dark/light style\n\t\t// TODO: Multiple styles (different channels)\n\n\t\treturn (\n\t\t\t<div className=\"Thread\">\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.songs &&\n\t\t\t\t\t\t\t<select onChange={this.changeSong.bind(this)}>\n\t\t\t\t\t\t\t\t{this.state.songs.map(song => <option key={song}>{song}</option>)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button type=\"submit\">Send to the slaughterhouse</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Settings;","import React from 'react';\nimport { getThread, sendToRender } from './api';\nimport './App.css';\nimport PickComments from './PickComments/index';\nimport Question from './Question';\nimport SelectThread from './SelectThread';\nimport Settings from './Settings';\nimport { connect } from 'react-redux'\nimport { setComments, setQuestion, setStage, setOptions, nextStage } from './redux/actions'\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { stage: 0, comments: [], question: null, processed: null, options: { song: null } }\n\t}\n\tfetchThread(thread) {\n\t\tgetThread(thread)\n\t\t\t.then(json => {\n\t\t\t\tlet mapping = comment => {\n\t\t\t\t\tlet newcomment = Object.assign({}, comment)\n\n\t\t\t\t\tif (Array.isArray(newcomment.replies)) {\n\t\t\t\t\t\tnewcomment.replies = newcomment.replies.map(mapping)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\tdata: newcomment\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet comments = json[1].map(mapping)\n\n\t\t\t\tthis.props.setQuestion(json[0])\n\t\t\t\tthis.props.setComments(comments)\n\t\t\t\tthis.props.setStage(1)\n\t\t\t})\n\t}\n\taddSettings(options) {\n\t\tthis.props.setOptions(options)\n\t\tthis.props.nextStage()\n\n\t\tsendToRender(this.props.question, this.props.processed, options)\n\t}\n\trender() {\n\t\treturn <div className=\"App\">\n\t\t\t{this.props.stage === 0 ?\n\t\t\t\t<SelectThread onSelection={this.fetchThread.bind(this)} /> :\n\t\t\t\tthis.props.stage === 1 ?\n\t\t\t\t\t<Question /> :\n\t\t\t\t\tthis.props.stage === 2 ?\n\t\t\t\t\t\t<PickComments /> :\n\t\t\t\t\t\tthis.props.stage === 3 ?\n\t\t\t\t\t\t\t<Settings onSelection={this.addSettings.bind(this)} /> :\n\t\t\t\t\t\t\tthis.props.stage === 4 ?\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h1>rendering atm bro</h1>\n\t\t\t\t\t\t\t\t\t<p>You may close this tab</p>\n\t\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<br />\n\t\t\t{this.props.stage !== 0 &&\n\t\t\t\t<button style={{ fontSize: 12 }} onClick={() => this.props.setStage(this.props.stage - 1)}>GO BACK!</button>\n\t\t\t}\n\t\t</div>\n\t}\n}\n\nlet mapStateToProps = store => {\n\treturn {\n\t\tquestion: store.question,\n\t\tprocessed: store.processed,\n\t\tstage: store.stage,\n\t\toptions: store.options,\n\t}\n}\n\nexport default connect(mapStateToProps, {\n\tsetComments,\n\tsetQuestion,\n\tsetStage,\n\tnextStage,\n\tsetOptions,\n})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}