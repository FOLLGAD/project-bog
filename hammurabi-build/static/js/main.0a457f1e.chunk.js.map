{"version":3,"sources":["redux/store.js","render/serviceWorker.js","redux/actions.js","api.js","FileInput.js","Songs/index.js","Themes/index.js","Videos.js","Credits.js","Dashboard/index.js","Login.js","Register.js","Logout.js","render/ChooseThread.js","render/estimate.js","render/sanitize.js","render/PickComments/Comment.js","render/PickComments/SortableComments.js","render/PickComments/index.js","render/Question.js","render/Settings.js","render/EditorComponent.js","render/SelfText.js","render/Final.js","render/TimeEstimator.js","render/App.js","Themes/_id.js","BuyCredits/StripeInput.js","BuyCredits/index.js","Router.js","index.js"],"names":["defaultState","comments","question","processed","song","theme","credits","themes","videos","songs","loggedIn","localStorage","getItem","process","createStore","state","action","type","Object","assign","val","title","selftext_html","includeSelftext","setItem","removeItem","Boolean","window","location","hostname","match","setQuestion","content","setComments","jsonFetch","RequestInfo","RequestInit","method","headers","Content-Type","credentials","fetch","then","res","ok","json","status","store","dispatch","err","error","getCredits","data","console","log","setCreditsAction","buyCredits","token","body","JSON","stringify","tokenId","id","catch","Error","getSongs","setSongsAction","uploadSong","formData","r","deleteSong","getThread","thread","mapping","comment","newcomment","Array","isArray","replies","map","enabled","getThemes","setThemesAction","getTheme","themeId","createTheme","editTheme","uploadThemeFiles","deleteTheme","postRender","_store$getState","getState","Accept","questionData","commentData","options","getVideos","setVideosAction","authorize","email","password","Headers","authorization","user","pass","btoa","register","FileInput","React","Component","[object Object]","args","super","this","handleFileChange","e","name","setState","target","files","render","buttonOnly","props","react_default","a","createElement","Button","attached","icon","label","style","position","accept","ref","fileInput","opacity","cursor","top","right","left","bottom","width","height","onChange","Icon","size","Fragment","Input","placeholder","value","file","readOnly","onClick","click","connect","async","FormData","append","_id","handleChange","componentDidMount","Container","i","fluid","key","Card","Content","basic","circular","floated","color","Loader","active","Divider","src_FileInput","navigate","textAlign","List","selection","Item","Header","Popup","trigger","on","Form","onSubmit","isNaN","limit","slice","video","_video$created$split","created","split","_video$created$split2","slicedToArray","date","time","href","rel","Meta","Segment","secondary","Subheader","Dashboard","as","Grid","stackable","Column","src_Credits","router_es","to","horizontal","Videos","Themes","Songs","App","constructor","loading","login","bind","d","redirectTo","verticalAlign","maxWidth","disabled","Message","Comment_Comment","Logout","replace","input","fetchThread","preventDefault","indexOf","pattern","onlythread","handle","autoFocus","negative","outroLen","transitionLen","getFull","commentTimes","reduce","b","length","estimateCommentHtml","noTags","trim","splits","str","filter","words","estimate","estimateComment","foulSpanArray","findWithRegex","regex","contentBlock","callback","text","getText","matchArr","start","exec","index","decorators","strategy","forEach","reg","RegExp","component","className","children","Comment","p","inlineToolbarPlugin","createInlineToolbarPlugin","linkPlugin","createLinkPlugin","plugins","convertFromHTML","body_html","editor","EditorState","createWithContent","ContentState","createFromBlockArray","contentBlocks","entityMap","handlePress","stopPropagation","propagateHtmlChange","html","stateToHTML","getCurrentContent","propagateEnableChange","_this$props","checked","onKeyDown","marginRight","author","score","Math","round","all_awardings","award","count","icon_url","src","alt","lib_default","editorState","InlineToolbar","extProps","draft_js_buttons_lib","LinkButton","PickComments_Comment_Comment","toClass","classes","keys","join","SortableComments","onDragEnd","result","destination","reorder","source","react_beautiful_dnd_esm","droppableId","provided","droppableProps","innerRef","items","item","draggableId","draggableProps","dragHandleProps","draggable","current","setCurrent","setProcessed","toggleCurrent","handleKeyEvent","fakecomments","createRef","code","goPrev","goNext","num","parseInt","addEventListener","componentWillUnmount","removeEventListener","topComment","scrollTo","filt","recFilter","commentArr","h","newS","chosen","has","set","add","commentNum","from","currentNum","reqComment","traverseOnce","toMinSec","seconds","fullMins","floor","restSecs","calculateTotalTime","recAdd","fullHtml","onCurrentCommentChange","s","onReorder","end","list","startIndex","endIndex","_result$splice","splice","removed","selectedComments","display","flexDirection","justifyContent","PickComments_SortableComments","PickComments_Comment","max","min","setTitle","setTheme","setSong","handleTheme","handleSong","themeOptions","songOptions","unshift","Select","required","clearable","EditorComponent","createEmpty","selftext","setSelftext","setIncludeSelftext","onChangeSelftext","onChangeInclude","Checkbox","render_EditorComponent","Final","send","total","push","calculateCommentList","timeInSeconds","mins","hours","readableTime","c","render_Settings","path","ChooseThread","render_Question","SelfText","src_render_PickComments","render_Final","default","noThrow","render_TimeEstimator","voices","delete","submit","voice","_this$state","intro","transition","outro","Group","inline","injectStripe","_ref","stripe","createToken","onPurchase","raised","react_stripe_elements_es","marginTop","message","normalCredits","BuyCredits_StripeInput","NotFound","redirect","src_Dashboard","src_BuyCredits","render_App","Register","Login","ReactDOM","apiKey","es","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a457f1e.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\nconst defaultState = {\n\t// Video rendering\n\tcomments: [],\n\tquestion: null,\n\tprocessed: null,\n\tsong: null,\n\ttheme: null,\n\n\t// Dashboard\n\tcredits: null,\n\tthemes: [],\n\tvideos: [],\n\tsongs: [],\n\n\tloggedIn: localStorage.getItem('loggedIn') === 'true',\n}\n\nfunction state(state = defaultState, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_COMMENTS':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tcomments: action.val,\n\t\t\t})\n\t\tcase 'SET_PROCESSED':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tprocessed: action.val,\n\t\t\t})\n\t\tcase 'SET_QUESTION':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tquestion: action.val,\n\t\t\t})\n\t\tcase 'SET_TITLE': {\n\t\t\tlet question = Object.assign({}, state.question, { title: action.val })\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tquestion: question,\n\t\t\t})\n\t\t}\n\t\tcase 'SET_SELFTEXT': {\n\t\t\tlet question = Object.assign({}, state.question, { selftext_html: action.val })\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tquestion,\n\t\t\t})\n\t\t}\n\t\tcase 'SET_INCLUDE_SELFTEXT': {\n\t\t\tlet question = Object.assign({}, state.question, { includeSelftext: action.val })\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tquestion,\n\t\t\t})\n\t\t}\n\t\tcase 'SET_THEME':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\ttheme: action.val,\n\t\t\t})\n\t\tcase 'SET_SONG':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tsong: action.val,\n\t\t\t})\n\t\tcase 'SET_CREDITS':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tcredits: action.val,\n\t\t\t})\n\t\tcase 'SET_THEMES':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tthemes: action.val,\n\t\t\t})\n\t\tcase 'SET_SONGS':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tsongs: action.val,\n\t\t\t})\n\t\tcase 'SET_VIDEOS':\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tvideos: action.val,\n\t\t\t})\n\t\tcase 'LOGIN':\n\t\t\tlocalStorage.setItem('loggedIn', 'true')\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tloggedIn: true,\n\t\t\t})\n\t\tcase 'LOGOUT':\n\t\t\tlocalStorage.removeItem('loggedIn')\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tloggedIn: false,\n\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default process.env.NODE_ENV === \"development\" ?\n\tcreateStore(state, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) :\n\tcreateStore(state)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const setProcessed = content => ({\n\ttype: 'SET_PROCESSED',\n\tval: content,\n})\nexport const setQuestion = content => ({\n\ttype: 'SET_QUESTION',\n\tval: content,\n})\nexport const setComments = content => ({\n\ttype: 'SET_COMMENTS',\n\tval: content,\n})\nexport const setTheme = content => ({\n\ttype: 'SET_THEME',\n\tval: content,\n})\nexport const setSong = content => ({\n\ttype: 'SET_SONG',\n\tval: content,\n})\nexport const setCredits = content => ({\n\ttype: 'SET_CREDITS',\n\tval: content,\n})\nexport const setThemes = content => ({\n\ttype: 'SET_THEMES',\n\tval: content,\n})\nexport const setSongs = content => ({\n\ttype: 'SET_SONGS',\n\tval: content,\n})\nexport const setVideos = content => ({\n\ttype: 'SET_VIDEOS',\n\tval: content,\n})\nexport const setTitle = content => ({\n\ttype: 'SET_TITLE',\n\tval: content,\n})\nexport const setSelftext = content => ({\n\ttype: 'SET_SELFTEXT',\n\tval: content,\n})\nexport const setIncludeSelftext = content => ({\n\ttype: 'SET_INCLUDE_SELFTEXT',\n\tval: content,\n})\nexport const login = () => ({\n\ttype: 'LOGIN',\n})\nexport const logout = () => ({\n\ttype: 'LOGOUT',\n})","import {\n\tlogin as loginAction,\n\tlogout as logoutAction,\n\tsetCredits as setCreditsAction,\n\tsetSongs as setSongsAction,\n\tsetThemes as setThemesAction,\n\tsetVideos as setVideosAction,\n\tsetQuestion,\n\tsetComments\n} from './redux/actions'\nimport store from './redux/store'\n\nlet apiurl = process.env.NODE_ENV === \"development\" ?\n\t'http://192.168.1.19:8000/api' :\n\t'/api'\n\n// The jsonFetch function is a wrapper around the native fetch().\n// It returns the response in json, and removes the \"loggedIn\" item\n// from localStorage if the response status code is 401.\n// Returns a promise that throws if the status code is not in the 200-399 range\nconst jsonFetch = (RequestInfo, RequestInit = {}) => {\n\tif (typeof RequestInfo === 'string') {\n\t\tRequestInfo = apiurl + RequestInfo\n\t}\n\tif (RequestInit.method && RequestInit.method !== \"GET\") {\n\t\tif (!RequestInit.headers) {\n\t\t\tRequestInit.headers = {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}\n\t\t}\n\t}\n\n\tRequestInit.credentials = 'include'\n\n\treturn fetch(RequestInfo, RequestInit)\n\t\t.then(res => {\n\t\t\tif (res.ok) {\n\t\t\t\treturn res.json()\n\t\t\t} else if (res.status === 401) {\n\t\t\t\tstore.dispatch(logoutAction())\n\t\t\t}\n\t\t\treturn res.json()\n\t\t\t\t.then(err => {\n\t\t\t\t\tthrow err.error // Parse as json, then throw.\n\t\t\t\t})\n\t\t})\n}\n\nexport let getCredits = function () {\n\treturn jsonFetch('/credits')\n\t\t.then(data => {\n\t\t\tconsole.log(data)\n\t\t\tstore.dispatch(setCreditsAction(data.credits))\n\t\t\treturn data\n\t\t})\n}\n\n// Use stripe to buy credits\nexport let buyCredits = function (token) {\n\treturn jsonFetch('/buy-credits', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({ tokenId: token.id }),\n\t})\n\t\t.catch(({ error }) => {\n\t\t\tthrow new Error(error)\n\t\t})\n}\n\nexport let getSongs = function () {\n\treturn jsonFetch('/songs')\n\t\t.then(songs => {\n\t\t\tstore.dispatch(setSongsAction(songs))\n\t\t\treturn songs\n\t\t})\n}\n\nexport let uploadSong = function (formData) {\n\treturn jsonFetch('/songs', {\n\t\tmethod: 'POST',\n\t\tbody: formData,\n\t\theaders: {\n\t\t}\n\t})\n\t\t.then(r => {\n\t\t\tgetSongs()\n\t\t\treturn r\n\t\t})\n}\n\nexport let deleteSong = function (id) {\n\treturn jsonFetch('/songs/' + id, {\n\t\tmethod: 'DELETE',\n\t})\n}\n\nexport let getThread = function (thread) {\n\treturn jsonFetch('/thread/' + thread)\n\t\t.then(json => {\n\t\t\tlet mapping = comment => {\n\t\t\t\tlet newcomment = Object.assign({}, comment)\n\n\t\t\t\tif (Array.isArray(newcomment.replies)) {\n\t\t\t\t\tnewcomment.replies = newcomment.replies.map(mapping)\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tenabled: false,\n\t\t\t\t\tdata: newcomment\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet comments = json[1].map(mapping)\n\n\t\t\tstore.dispatch(setQuestion(json[0]))\n\t\t\tstore.dispatch(setComments(comments))\n\n\t\t\treturn json\n\t\t})\n}\n\nexport let getThemes = function () {\n\treturn jsonFetch('/themes')\n\t\t.then(themes => {\n\t\t\tstore.dispatch(setThemesAction(themes))\n\t\t\treturn themes\n\t\t})\n}\n\nexport let getTheme = function (themeId) {\n\treturn jsonFetch('/themes/' + themeId)\n}\n\nexport let createTheme = function (data) {\n\treturn jsonFetch('/themes', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t})\n}\n\nexport let editTheme = function (id, data) {\n\treturn jsonFetch('/themes/' + id, {\n\t\tmethod: 'PUT',\n\t\tbody: JSON.stringify(data),\n\t})\n}\n\nexport let uploadThemeFiles = function (id, formData) {\n\treturn jsonFetch('/themes/' + id + '/files', {\n\t\tmethod: 'POST',\n\t\tbody: formData,\n\t\theaders: {\n\t\t}\n\t})\n}\n\nexport let deleteTheme = function (id) {\n\treturn jsonFetch('/themes/' + id, {\n\t\tmethod: 'DELETE',\n\t})\n}\n\nexport let postRender = function () {\n\tlet { question, processed, theme, song } = store.getState()\n\n\tif (!question.includeSelftext) {\n\t\tdelete question.selftext_html\n\t}\n\n\treturn jsonFetch('/videos', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tquestionData: question,\n\t\t\tcommentData: processed,\n\t\t\toptions: {\n\t\t\t\ttheme,\n\t\t\t\tsong,\n\t\t\t},\n\t\t})\n\t})\n}\n\nexport const getVideos = function () {\n\treturn jsonFetch('/videos')\n\t\t.then(r => {\n\t\t\tstore.dispatch(setVideosAction(r))\n\t\t\treturn r\n\t\t})\n}\n\nexport const openVideoLink = function (videoId) {\n\treturn window.open('/videos/' + videoId, '_blank')\n}\n\n// btoa: Binary to Ascii (Base64 only contains ascii characters)\n\n// Basic toBase64(username:password)\nconst toBasicAuth = (user, pass) => `Basic ${btoa(user + ':' + pass)}`\n\nexport let authorize = function (email, password) {\n\treturn jsonFetch('/auth', {\n\t\theaders: new Headers({\n\t\t\tauthorization: toBasicAuth(email, password),\n\t\t}),\n\t\tmethod: 'POST',\n\t}).then(r => {\n\t\tstore.dispatch(loginAction())\n\t\treturn r\n\t})\n}\n\nexport let register = function (email, password) {\n\treturn jsonFetch('/register', {\n\t\tbody: JSON.stringify({ email, password }),\n\t\tmethod: 'POST',\n\t})\n}\n\nexport let logout = function () {\n\treturn jsonFetch('/logout').then(r => {\n\t\tstore.dispatch(logoutAction())\n\t})\n}","import React from 'react'\nimport { Icon, Input, Button } from 'semantic-ui-react'\n\nclass FileInput extends React.Component {\n    handleFileChange = (e, { name }) => this.setState({ [name]: e.target.files[0] })\n    render() {\n        let buttonOnly = this.props.buttonOnly\n        return (\n            <div>\n                <Button\n                    attached={buttonOnly ? null : \"left\"}\n                    icon={!this.props.label}\n                    style={{ position: 'relative' }}>\n                    <input\n                        name={this.props.name}\n                        type=\"file\"\n                        accept={this.props.accept || null}\n                        ref={r => this.fileInput = r}\n                        style={{ opacity: 0, cursor: 'pointer', position: 'absolute', top: 0, right: 0, left: 0, bottom: 0, width: '100%', height: '100%' }}\n                        onChange={this.props.onChange} />\n                    <Icon name=\"file\" size=\"large\" />\n                    {this.props.label && <>{this.props.label}</>}\n                </Button>\n                {!buttonOnly && <Input\n                    placeholder=\"No file\"\n                    value={this.props.file ? this.props.file.name : ''}\n                    readOnly={true}\n                    onClick={() => this.fileInput.click()} />}\n            </div>\n        )\n    }\n}\n\nexport default FileInput;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Card, Container, Divider, Loader } from 'semantic-ui-react'\nimport { getSongs, uploadSong, deleteSong } from '../api'\nimport FileInput from '../FileInput'\n\nclass ThemesList extends React.Component {\n    uploadSong = async (e) => {\n        let file = e.target.files[0]\n        let formData = new FormData()\n        formData.append('song', file)\n        await uploadSong(formData)\n    }\n    deleteSong = async song => {\n        await deleteSong(song._id)\n        getSongs()\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    handleFileChange = (e, { name }) => this.setState({ [name]: e.target.files[0] })\n    componentDidMount() {\n        getSongs()\n    }\n    render() {\n        return (\n            <Container>\n                <div>\n                    {this.props.songs ? this.props.songs.map((song, i) =>\n                        <Container fluid key={song._id}>\n                            <Card fluid>\n                                <Card.Content>\n                                    {song.name}\n                                    <Button\n                                        basic\n                                        circular\n                                        floated=\"right\"\n                                        onClick={() => this.deleteSong(song)}\n                                        color=\"red\"\n                                        icon=\"delete\" />\n                                </Card.Content>\n                            </Card>\n                        </Container>\n                    ) :\n                        <Loader active />}\n                </div>\n                <Divider></Divider>\n\n                <FileInput accept=\"audio/*\" buttonOnly name=\"song\" label=\"Upload song\" onChange={this.uploadSong} />\n                {/* <Popup trigger={<Button>Upload song</Button>}\n                    on=\"click\"\n                    position=\"bottom center\">\n                    <Container fluid textAlign=\"center\">\n                        <Form onSubmit={this.uploadSong}>\n                            <Header>Upload song</Header>\n                            <Form.Input name=\"name\" onChange={this.handleChange} placeholder=\"Name\" />\n                            <Form.Button type=\"submit\">Upload</Form.Button>\n                            <Message size=\"tiny\" color=\"yellow\">\n                                Songs that are too short will be repeated\n                            </Message>\n                        </Form>\n                    </Container>\n                </Popup> */}\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = store => {\n    return {\n        songs: store.songs,\n    }\n}\n\nexport default connect(mapStateToProps)(ThemesList);","import { Link, navigate } from '@reach/router'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Card, Container, Divider, Form, Header, Popup, Loader, List } from 'semantic-ui-react'\nimport { createTheme, getThemes } from '../api'\n\nclass ThemesList extends React.Component {\n    createTheme = async () => {\n        const { theme } = await createTheme({ name: this.state.name })\n        navigate(`/themes/${theme}`)\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    componentDidMount() {\n        getThemes()\n    }\n    render() {\n        return (\n            <Container textAlign=\"left\">\n                <List selection>\n                    {this.props.themes ? this.props.themes.map(theme =>\n                        <List.Item key={theme._id} onClick={() => navigate(\"/themes/\" + theme._id)}>\n                            {/* <Link to={\"/themes/\" + theme._id}> */}\n                                <List.Content>\n                                    <List.Header>{theme.name}</List.Header>\n                                </List.Content>\n                            {/* </Link> */}\n                        </List.Item>\n                    ) :\n                        <Loader active />}\n                </List>\n                <Divider></Divider>\n                <Popup trigger={<Button>New theme</Button>} on=\"click\" position=\"bottom center\">\n                    <Container fluid textAlign=\"center\">\n                        <Form onSubmit={this.createTheme}>\n                            <Header>Create new theme</Header>\n                            <Form.Input name=\"name\" onChange={this.handleChange} placeholder=\"Name\"></Form.Input>\n                            <Form.Button type=\"submit\">Create</Form.Button>\n                        </Form>\n                    </Container>\n                </Popup>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = store => {\n    return {\n        themes: store.themes,\n    }\n}\n\nexport default connect(mapStateToProps)(ThemesList);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, Container, Loader } from 'semantic-ui-react'\nimport { getVideos } from './api'\n\nclass VideosList extends React.Component {\n    componentDidMount() {\n        getVideos()\n    }\n    getVideos = () => {\n        return isNaN(this.props.limit) ? this.props.videos : this.props.videos.slice(0, this.props.limit)\n    }\n    render() {\n        return (\n            <Container>\n                {this.props.videos ? this.getVideos().map(video => {\n                    let [date, time] = video.created.split('T')\n                    time = time.split('.')[0]\n                    return (\n                        <a key={video._id} href={\"/api/videos/\" + video.file} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Card fluid>\n                                <Card.Content>{date} {time}</Card.Content>\n                                <Card.Meta>{video._id}</Card.Meta>\n                            </Card>\n                        </a>\n                    )\n                }) :\n                    <Loader active />}\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = store => {\n    return {\n        videos: store.videos,\n    }\n}\n\nexport default connect(mapStateToProps)(VideosList);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Header, Segment, Loader } from 'semantic-ui-react'\nimport { getCredits } from './api'\n\nclass Credits extends React.Component {\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    componentDidMount() {\n        getCredits()\n    }\n    render() {\n        return (\n            <Segment textAlign=\"center\" secondary>\n                {this.props.credits != null ?\n                    <Header size=\"huge\">\n                        <Header.Subheader>Credits</Header.Subheader>\n                        <Header.Content>{this.props.credits}</Header.Content>\n                    </Header> :\n                    <Loader active />}\n            </Segment>\n        )\n    }\n}\n\nlet mapStateToProps = store => {\n    return {\n        credits: store.credits,\n    }\n}\n\nexport default connect(mapStateToProps)(Credits);","import { Link } from '@reach/router'\nimport React from 'react'\nimport { Button, Container, Divider, Grid, Header, Segment } from 'semantic-ui-react'\nimport Songs from '../Songs'\nimport Themes from '../Themes/index'\nimport Videos from '../Videos'\nimport Credits from '../Credits'\n\nclass Dashboard extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Container textAlign=\"center\">\n\t\t\t\t<Header as=\"h1\">Dashboard</Header>\n\t\t\t\t<Grid stackable>\n\t\t\t\t\t<Grid.Column width={8}>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Credits />\n\t\t\t\t\t\t\t<Link to=\"/buy-credits\">\n\t\t\t\t\t\t\t\t<Button>Buy credits</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t<Divider horizontal>Videos</Divider>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Videos limit={8} />\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Link to=\"/video\">\n\t\t\t\t\t\t\t\t<Button size=\"big\">Make video</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column floated=\"right\" width={8}>\n\t\t\t\t\t\t<Divider horizontal>Themes</Divider>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Themes />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t<Divider horizontal>Songs</Divider>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Songs />\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default Dashboard","import React from 'react';\nimport { Grid, Header, Segment, Form, Message } from 'semantic-ui-react'\nimport { authorize } from './api'\nimport { Link, redirectTo } from '@reach/router'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: null,\n            loading: false,\n        }\n\n        this.login = this.login.bind(this)\n    }\n    login() {\n        this.setState({ error: null, loading: true })\n        authorize(this.state.email, this.state.password)\n            .catch(err => {\n                this.setState({ loading: false })\n                if (typeof err === \"string\") {\n                    this.setState({ error: err })\n                } else {\n                    console.error(err)\n                }\n            })\n            .then(d => {\n                redirectTo('/dashboard')\n            })\n    }\n    render() {\n        return (\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\">Log in</Header>\n                    <Form onSubmit={this.login}>\n                        <Segment>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Email\"\n                                disabled={this.state.loading}\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={d => this.setState({ email: d.target.value })}>\n                            </Form.Input>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Password\"\n                                disabled={this.state.loading}\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={d => this.setState({ password: d.target.value })}>\n                            </Form.Input>\n                            <Form.Button\n                                fluid\n                                type=\"submit\"\n                                size=\"large\"\n                                disabled={this.state.loading}\n                                color=\"teal\">\n                                Log in\n                            </Form.Button>\n                            <div><Link to=\"/register\">Register</Link></div>\n                        </Segment>\n                    </Form>\n                    <Message size=\"small\">Forgot password?</Message>\n                    {this.state.error && <Message error>{this.state.error}</Message>}\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport { Grid, Header, Segment, Form, Message,Comment } from 'semantic-ui-react'\nimport { register } from './api'\nimport { Link } from '@reach/router'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n        }\n\n        this.register = this.register.bind(this)\n    }\n    register() {\n        register(this.state.email, this.state.password)\n    }\n    render() {\n        return (\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\">Register</Header>\n                    <Form onSubmit={this.register}>\n                        <Segment>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={d => this.setState({ email: d.target.value })}>\n                            </Form.Input>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={d => this.setState({ password: d.target.value })}>\n                            </Form.Input>\n                            <Form.Button\n                                fluid\n                                type=\"submit\"\n                                size=\"large\"\n                                color=\"teal\">\n                                Register\n                            </Form.Button>\n                            <Comment><Link to=\"/login\">Log in</Link></Comment>\n                        </Segment>\n                    </Form>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default App;","import React from 'react'\nimport { logout } from './api'\nimport { navigate } from '@reach/router'\n\nexport default function () {\n    logout()\n        .then(r => {\n            navigate('/', { replace: true })\n        })\n\n    return <div>Logging out...</div>\n}","import { navigate } from '@reach/router'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Header, Icon, Message, Segment } from 'semantic-ui-react'\nimport { getThread } from '../api'\nimport { setComments, setQuestion } from '../redux/actions'\n\nclass Thread extends React.Component {\n\tstate = {\n\t\tinput: '',\n\t\tloading: null,\n\t\terror: null,\n\t}\n\tfetchThread = thread => {\n\t\tthis.setState({ error: null, loading: true })\n\n\t\tgetThread(thread)\n\t\t\t.then(() => {\n\t\t\t\tnavigate('/video/post')\n\t\t\t\tthis.setState({ loading: false })\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.setState({ error: err, loading: false })\n\t\t\t})\n\t}\n\tonSubmit = e => {\n\t\te.preventDefault()\n\n\t\tlet thread = this.state.input\n\n\t\tif (thread.indexOf('comments') !== -1) {\n\t\t\tlet pattern = /\\/comments\\/([\\w]+)/\n\t\t\tlet match = thread.match(pattern)\n\n\t\t\tif (match) {\n\t\t\t\tthread = match[1]\n\t\t\t}\n\t\t}\n\n\t\tlet onlythread = thread.replace(/[^\\w\\d]/g, '')\n\n\t\tthis.fetchThread(onlythread)\n\t}\n\thandle = e => {\n\t\tthis.setState({ input: e.target.value })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Segment>\n\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t<Header size=\"large\">Choose a thread</Header>\n\t\t\t\t\t<Form.Input value={this.state.input} onChange={this.handle} placeholder=\"Put thread ID or url\" autoFocus />\n\t\t\t\t\t<Form.Button loading={this.state.loading}>\n\t\t\t\t\t\tOK\n\t\t\t\t\t\t<Icon name=\"angle right\" />\n\t\t\t\t\t</Form.Button>\n\t\t\t\t\t{this.state.error && <Message negative>{this.state.error}</Message>}\n\t\t\t\t</Form>\n\t\t\t</Segment>\n\t\t)\n\t}\n}\n\nexport default connect(null, {\n\tsetComments,\n\tsetQuestion,\n})(Thread);","// ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 transition.mkv\n\n// Outro 13.163 s\n// Transition bright 0.843 s\n// Transition 0.741 s\n// Number of splits * X\n// Number of words * Y\n\nlet outroLen = 13.163\nlet transitionLen = 0.741\n\nfunction splitString(str) {\n\treturn str\n\t\t.split(/<br>|(.+?[\\.,?!]+[\"'\\)\\s]+)/g) // eslint-disable-line no-useless-escape\n\t\t.filter(d => d.replace('\\u200B', ' ').trim().length > 0)\n}\n\nexport function getFull(commentTimes) {\n\tlet comments = commentTimes.reduce((a, b) => a + b, 0)\n\treturn comments + outroLen + transitionLen * commentTimes.length\n}\n\nexport function estimateComment(splits, words) {\n\treturn splits * 0.38152203637725923 + words * 0.2767486833003453\n}\n\nexport function estimateCommentHtml(comment) {\n\tlet noTags = comment.replace(/<.+?>/g, '').trim()\n\tlet splits = splitString(noTags).length\n\tlet words = noTags.replace(/<.+?>/g, '').split(/\\s+/g).length\n\tlet estimate = estimateComment(splits, words)\n\n\treturn {\n\t\twords,\n\t\tsplits,\n\t\testimate,\n\t}\n}\n\nexport function calculateCommentList(commentArr) {\n\tlet total = []\n\tlet recAdd = comment => {\n\t\ttotal.push(estimateCommentHtml(comment.data.body_html).estimate)\n\n\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\tcomment.data.replies\n\t\t\t\t.filter(r => r.enabled)\n\t\t\t\t.map(recAdd)\n\t\t}\n\t}\n\tcommentArr\n\t\t.filter(d => d.enabled)\n\t\t.map(recAdd)\n\n\treturn Math.round(1e2 * getFull(total)) / 1e2\n}","// These will hide the middle of the three regex groups\nexport const foulSpanArray = [\n\t/(f)(uck)()/,\n\t/(sh)(it)()/,\n\t/(b)(it)(ch)/,\n\t/(c)(un)(t)/,\n\t/(ni)(gg)(a)/,\n\t/(ni)(gge)(r)/,\n\t/(p)(o)(rn)/,\n\t/((?:\\W|^)d)(ic)(k)/,\n\t/((?:\\W|^)a)(ss)(es)(?!\\w)/,\n\t/((?:\\W|^)a)(ss)(\\W|$)/,\n\t/((?:\\W|^)r)(ap)(e|ist|ing)/,\n\t/((?:\\W|^)c)(u)(m)/,\n\t/((?:\\W|^)t)(i)(ts)/,\n\t/(t)(it)(ties)/,\n\t/(c)(o)(ck[^an])/, // doesnt match 'cockney', 'cockatrice'\n\t/(wh)(or)(e)/,\n\t/(p)(us)(sy)/,\n\t/(s)(e)(x)/,\n\t/(d)(ic)(k)/,\n\t/(ret)(ar)(d)/,\n\t/(a)(ss)(hat|face|head|burger|hole)/,\n\t/((?:\\W|^)a)(n)(al[^oy])/,\n\t/(pe)(n)(is)/,\n\t/(va)(gi)(na)/,\n\t/(dr)(u)(gs)/,\n\t/(mast)(urb)(at)/,\n\t/(dr)(u)(gs)/,\n]","import React from 'react'\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport { stateToHTML } from 'draft-js-export-html'\nimport { foulSpanArray } from '../sanitize'\nimport createLinkPlugin from 'draft-js-anchor-plugin'\nimport createInlineToolbarPlugin from 'draft-js-inline-toolbar-plugin'\nimport { ItalicButton, BoldButton, UnderlineButton } from 'draft-js-buttons'\n\nfunction handleStrategy(contentBlock, callback) {\n\tfoulSpanArray.forEach(reg => {\n\t\tfindWithRegex(new RegExp(reg, 'ig'), contentBlock, callback)\n\t})\n}\n\nfunction editStrategy(contentBlock, callback) {\n\tfindWithRegex(/(?:^|\\W)edit/img, contentBlock, callback)\n}\n\nlet handleSpan = props => {\n\treturn <span className=\"highlight-danger\">{props.children}</span>\n}\n\nlet editSpan = props => {\n\treturn <span className=\"highlight-warn\">{props.children}</span>\n}\n\nfunction findWithRegex(regex, contentBlock, callback) {\n\tconst text = contentBlock.getText()\n\tlet matchArr, start\n\twhile ((matchArr = regex.exec(text)) !== null) {\n\t\tstart = matchArr.index\n\t\tcallback(start, start + matchArr[0].length)\n\t}\n}\n\nlet decorators = [\n\t{\n\t\tstrategy: handleStrategy,\n\t\tcomponent: handleSpan,\n\t},\n\t{\n\t\tstrategy: editStrategy,\n\t\tcomponent: editSpan,\n\t},\n]\n\nclass Comment extends React.Component {\n\tconstructor(p) {\n\t\tsuper(p)\n\n\t\tthis.inlineToolbarPlugin = createInlineToolbarPlugin()\n\t\tthis.linkPlugin = createLinkPlugin()\n\t\tthis.plugins = [\n\t\t\tthis.inlineToolbarPlugin,\n\t\t\tthis.linkPlugin,\n\t\t]\n\n\t\tlet d = convertFromHTML(p.comment.data.body_html)\n\t\tthis.state = { editor: EditorState.createWithContent(ContentState.createFromBlockArray(d.contentBlocks, d.entityMap)) }\n\t}\n\thandlePress(e) {\n\t\te.stopPropagation()\n\t}\n\tpropagateHtmlChange(val) {\n\t\tthis.setState({ editor: val })\n\n\t\tlet html = stateToHTML(this.state.editor.getCurrentContent())\n\t\tthis.props.comment.data.body_html = html\n\n\t\tthis.props.onChange()\n\t}\n\tpropagateEnableChange() {\n\t\tthis.props.comment.enabled = !this.props.comment.enabled\n\t\tthis.props.onChange()\n\t}\n\trender() {\n\t\tlet { comment, onChange } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"Comment\">\n\t\t\t\t<input className=\"left-box\" type=\"checkbox\" checked={comment.enabled} onChange={this.propagateEnableChange.bind(this)} />\n\t\t\t\t<div onKeyDown={this.handlePress}>\n\t\t\t\t\t<div onClick={this.propagateEnableChange.bind(this)}>\n\t\t\t\t\t\t<span style={{ color: \"blue\", marginRight: 5 }}>{comment.data.author}</span>\n\t\t\t\t\t\t<span>{comment.data.score > 1e3 ? Math.round(comment.data.score / 1e2) / 1e1 + 'k' : comment.data.score} points</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{comment.data.all_awardings.map(award => <span key={award.count + award.icon_url}><img src={award.icon_url} alt=\"award\" width={16} />{award.count > 1 && award.count}</span>)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Editor\n\t\t\t\t\t\teditorState={this.state.editor}\n\t\t\t\t\t\tonChange={this.propagateHtmlChange.bind(this)}\n\t\t\t\t\t\tdecorators={decorators}\n\t\t\t\t\t\tplugins={this.plugins}\n\t\t\t\t\t/>\n\t\t\t\t\t<this.inlineToolbarPlugin.InlineToolbar>\n\t\t\t\t\t\t{extProps => <>\n\t\t\t\t\t\t\t<BoldButton {...extProps} />\n\t\t\t\t\t\t\t<ItalicButton {...extProps} />\n\t\t\t\t\t\t\t<UnderlineButton {...extProps} />\n\t\t\t\t\t\t\t<this.linkPlugin.LinkButton {...extProps} />\n\t\t\t\t\t\t</>}\n\t\t\t\t\t</this.inlineToolbarPlugin.InlineToolbar>\n\t\t\t\t\t{Array.isArray(comment.data.replies) && comment.data.replies.map(d => <Comment key={d.data.id} comment={d} onChange={onChange} />)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Comment;","import React from 'react'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nlet toClass = classes => Object.keys(classes).filter(d => classes[d]).join(' ')\n\nclass SortableComments extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.onDragEnd = this.onDragEnd.bind(this)\n\t}\n\tonDragEnd(result) {\n\t\tif (!result.destination) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.props.reorder(result.source.index, result.destination.index)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\n\t\t\t\t<Droppable droppableId=\"droppable\">\n\t\t\t\t\t{provided => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\tclassName=\"draggable-container\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.items.map((item, index) => (\n\t\t\t\t\t\t\t\t<Draggable key={item.data.id} draggableId={item.data.id} index={index}>\n\t\t\t\t\t\t\t\t\t{provided => (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\t\tclassName={toClass({\n\t\t\t\t\t\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcurrent: this.props.current === index,\n\t\t\t\t\t\t\t\t\t\t\t\tenabled: item.enabled,\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.setCurrent(index)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</DragDropContext>\n\t\t)\n\t}\n}\n\nexport default SortableComments","import { navigate } from '@reach/router';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setComments, setProcessed } from '../../redux/actions';\nimport { estimateCommentHtml, getFull } from '../estimate';\nimport Comment from './Comment';\nimport './index.css';\nimport SortableComments from './SortableComments';\nimport { Segment, Container } from 'semantic-ui-react';\n\nfunction recFilter(commentArr) {\n\tlet news = commentArr.filter(h => h.enabled)\n\t\t.map(d => d.data)\n\t\t.map(d => {\n\t\t\tlet newS = Object.assign({}, d)\n\t\t\tif (newS.replies) {\n\t\t\t\tnewS.replies = recFilter(newS.replies)\n\t\t\t}\n\t\t\treturn newS\n\t\t})\n\treturn news\n}\n\nclass PickComments extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = { current: 0 }\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t\tthis.handle = this.handle.bind(this)\n\t\tthis.toggleCurrent = this.toggleCurrent.bind(this)\n\t\tthis.handleKeyEvent = this.handleKeyEvent.bind(this)\n\n\t\tthis.fakecomments = React.createRef()\n\t}\n\thandleKeyEvent(e) {\n\t\tswitch (e.code) {\n\t\t\tcase \"KeyA\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tthis.goPrev()\n\t\t\t\tbreak;\n\t\t\tcase \"KeyD\":\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tthis.goNext()\n\t\t\t\tbreak\n\t\t\tcase \"Enter\":\n\t\t\t\tthis.onSubmit()\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tif (e.code.indexOf('Digit') === 0) {\n\t\t\t\t\tlet num = parseInt(e.code.replace('Digit', ''))\n\t\t\t\t\tthis.toggleCurrent(num)\n\t\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyEvent)\n\t}\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyEvent)\n\t}\n\tgoPrev() {\n\t\tif (this.state.current > 0) {\n\t\t\tthis.topComment.scrollTo(0, 0)\n\t\t\tthis.setState({ current: this.state.current - 1 })\n\t\t}\n\t}\n\tgoNext() {\n\t\tif (this.state.current < this.props.comments.length - 1) {\n\t\t\tthis.topComment.scrollTo(0, 0)\n\t\t\tthis.setState({ current: this.state.current + 1 })\n\t\t}\n\t}\n\tonSubmit() {\n\t\tlet filt = recFilter(this.props.comments)\n\n\t\tthis.props.setProcessed(filt)\n\n\t\tnavigate('/video/final')\n\t}\n\thandle(id) {\n\t\tif (this.state.chosen.has(id)) {\n\t\t\tthis.state.chosen.set(id)\n\t\t} else {\n\t\t\tthis.state.chosen.add(id)\n\t\t}\n\t\tthis.setState({\n\t\t\tchosen: this.state.chosen,\n\t\t})\n\t}\n\ttoggleCurrent(commentNum) {\n\t\tlet set = Array.from(this.props.comments)\n\n\t\tif (commentNum) {\n\t\t\tlet currentNum = 0\n\n\t\t\t// Used for checking the N:th visible comment in the tree\n\t\t\tfunction traverseOnce(comment) {\n\t\t\t\tcurrentNum++\n\t\t\t\tif (currentNum === commentNum) {\n\t\t\t\t\treturn comment\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\t\t\tfor (let i = 0; i < comment.data.replies.length; i++) {\n\t\t\t\t\t\tconst element = comment.data.replies[i];\n\t\t\t\t\t\tlet res = traverseOnce(element)\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\treturn res\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet reqComment = traverseOnce(set[this.state.current])\n\t\t\tif (!reqComment) {\n\t\t\t\treturn // Could not find a comment with inputted number\n\t\t\t}\n\t\t\treqComment.enabled = !reqComment.enabled\n\t\t} else {\n\t\t\tset[this.state.current].enabled = !set[this.state.current].enabled\n\t\t}\n\n\t\tthis.props.setComments(set)\n\t}\n\ttoMinSec(seconds) {\n\t\tlet fullMins = Math.floor(seconds / 60) // No. full mins\n\t\tlet restSecs = ('00' + Math.round(seconds - 60 * fullMins)).slice(-2)\n\t\tlet mins = ('00' + fullMins).slice(-2)\n\t\treturn `${mins}:${restSecs}`\n\t}\n\tcalculateTotalTime() {\n\t\tlet recAdd = comment => {\n\t\t\tlet fullHtml = comment.data.body_html\n\n\t\t\tif (Array.isArray(comment.data.replies)) {\n\t\t\t\tfullHtml += comment.data.replies\n\t\t\t\t\t.filter(r => r.enabled)\n\t\t\t\t\t.map(recAdd)\n\t\t\t\t\t.reduce((a, b) => a + b, '')\n\t\t\t}\n\n\t\t\treturn fullHtml\n\t\t}\n\t\tlet commentTimes = this.props.comments\n\t\t\t.filter(d => d.enabled)\n\t\t\t.map(recAdd)\n\t\t\t.map(b => estimateCommentHtml(b).estimate)\n\n\t\treturn Math.round(1e2 * getFull(commentTimes)) / 1e2\n\t}\n\tonCurrentCommentChange(comment) {\n\t\tlet s = Array.from(this.props.comments)\n\t\tthis.props.setComments(s)\n\t}\n\tonReorder(start, end) {\n\t\tconst reorder = (list, startIndex, endIndex) => {\n\t\t\tconst result = Array.from(list)\n\t\t\tconst [removed] = result.splice(startIndex, 1)\n\t\t\tresult.splice(endIndex, 0, removed)\n\n\t\t\treturn result\n\t\t}\n\n\t\tthis.props.setComments(reorder(this.props.comments, start, end))\n\n\t\tlet current = this.state.current\n\n\t\tif (current === start) {\n\t\t\tthis.setState({ current: end })\n\t\t} else if (current < start && current > end) {\n\t\t\tthis.setState({ current: current + 1 })\n\t\t} else if (current > start && current < end) {\n\t\t\tthis.setState({ current: current - 1 })\n\t\t}\n\t}\n\trender() {\n\t\tlet comment = this.props.comments[this.state.current]\n\t\tlet selectedComments = this.props.comments.filter(d => d.enabled).length\n\n\t\treturn (\n\t\t\t<Container style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n\t\t\t\t<SortableComments setCurrent={i => this.setState({ current: i })} current={this.state.current} reorder={this.onReorder.bind(this)} items={this.props.comments} />\n\t\t\t\t<div>\n\t\t\t\t\t<Segment className=\"top-comment\" ref={ref => this.topComment = ref}>\n\t\t\t\t\t\t<Comment key={comment.data.id} comment={comment} onChange={this.onCurrentCommentChange.bind(this)} />\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<button disabled={this.state.current <= 0} onClick={this.goPrev.bind(this)}>Prev</button>\n\t\t\t\t\t\t<input style={{ width: 60 }} type=\"number\" max={this.props.comments.length} min={1} value={this.state.current + 1} onChange={e => this.setState({ current: Math.max(0, parseInt(e.target.value) - 1 || 0) })} />\n\t\t\t\t\t\t<button disabled={this.state.current > this.props.comments.length} onClick={this.goNext.bind(this)}>Next</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<span>Total time: {this.toMinSec(this.calculateTotalTime())}, {selectedComments} {selectedComments === 1 ? 'comment' : 'comments'} selected</span>\n\t\t\t\t\t\t<button onClick={this.onSubmit}>Finish</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default connect(state => ({\n\tcomments: state.comments,\n}), {\n\tsetProcessed,\n\tsetComments\n})(PickComments);","import { navigate } from '@reach/router';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Header, Segment } from 'semantic-ui-react';\nimport { setTitle } from '../redux/actions';\n\nclass Question extends Component {\n\tonSubmit = e => {\n\t\te.preventDefault()\n\n\t\tnavigate('/video/selftext')\n\t}\n\tonChange = e => {\n\t\tthis.props.setTitle(e.target.value)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Segment>\n\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t<Header size=\"large\">Edit question</Header>\n\t\t\t\t\t<Form.Input value={this.props.title} onChange={this.onChange} />\n\t\t\t\t\t<Form.Button type=\"submit\">Submit</Form.Button>\n\t\t\t\t</Form>\n\t\t\t</Segment>\n\t\t)\n\t}\n}\n\nexport default connect(state => ({\n\ttitle: state.question.title,\n}), { setTitle })(Question);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Form, Segment } from 'semantic-ui-react';\nimport { getSongs, getThemes } from '../api';\nimport { setSong, setTheme } from '../redux/actions';\nimport { navigate } from '@reach/router'\n\nclass Settings extends Component {\n\tconstructor(p) {\n\t\tsuper(p)\n\n\t\tthis.state = {\n\t\t\tsong: null,\n\t\t\ttheme: null,\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tgetThemes()\n\t\tgetSongs()\n\t}\n\tonSubmit = e => {\n\t\te.preventDefault()\n\n\t\tnavigate('/video/thread')\n\t}\n\thandleTheme = (e, { value }) => {\n\t\tthis.props.setTheme(value)\n\t}\n\thandleSong = (e, { value }) => {\n\t\tthis.props.setSong(value)\n\t}\n\trender() {\n\t\tlet themeOptions = this.props.themes.map(theme => ({ value: theme._id, key: theme._id, text: theme.name }))\n\t\tlet songOptions = this.props.songs.map(song => ({ value: song._id, key: song._id, text: song.name }))\n\t\tsongOptions.unshift({ value: null, key: \"\", text: \"No song\" })\n\n\t\treturn (\n\t\t\t<Container textAlign=\"left\">\n\t\t\t\t<Segment>\n\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\tlabel=\"Theme\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tplaceholder=\"Select a theme\"\n\t\t\t\t\t\t\tvalue={this.props.theme}\n\t\t\t\t\t\t\tname=\"theme\"\n\t\t\t\t\t\t\toptions={themeOptions}\n\t\t\t\t\t\t\tonChange={this.handleTheme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\tlabel=\"Song\"\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tplaceholder=\"No song\"\n\t\t\t\t\t\t\tvalue={this.props.song}\n\t\t\t\t\t\t\tname=\"song\"\n\t\t\t\t\t\t\toptions={songOptions}\n\t\t\t\t\t\t\tonChange={this.handleSong}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Button type=\"submit\" disabled={!this.props.theme}>Continue</Form.Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default connect(state => ({\n\ttheme: state.theme,\n\tsong: state.song,\n\tthemes: state.themes,\n\tsongs: state.songs,\n}), { setTheme, setSong })(Settings);","import React, { Component } from 'react'\nimport { foulSpanArray } from './sanitize'\n\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport { stateToHTML } from 'draft-js-export-html'\nimport createLinkPlugin from 'draft-js-anchor-plugin'\nimport createInlineToolbarPlugin from 'draft-js-inline-toolbar-plugin'\nimport { ItalicButton, BoldButton, UnderlineButton } from 'draft-js-buttons'\n\nfunction findWithRegex(regex, contentBlock, callback) {\n    const text = contentBlock.getText()\n    let matchArr, start\n    while ((matchArr = regex.exec(text)) !== null) {\n        start = matchArr.index\n        callback(start, start + matchArr[0].length)\n    }\n}\n\nfunction handleStrategy(contentBlock, callback) {\n    foulSpanArray.forEach(reg => {\n        findWithRegex(new RegExp(reg, 'ig'), contentBlock, callback)\n    })\n}\nfunction editStrategy(contentBlock, callback) {\n    findWithRegex(/(?:^|\\W)edit/img, contentBlock, callback)\n}\n\nlet handleSpan = props => {\n    return <span className=\"highlight-danger\">{props.children}</span>\n}\n\nlet editSpan = props => {\n    return <span className=\"highlight-warn\">{props.children}</span>\n}\n\nlet decorators = [\n    {\n        strategy: handleStrategy,\n        component: handleSpan,\n    },\n    {\n        strategy: editStrategy,\n        component: editSpan,\n    },\n]\n\nclass EditorComponent extends Component {\n    constructor(p) {\n        super(p)\n\n        this.inlineToolbarPlugin = createInlineToolbarPlugin()\n        this.linkPlugin = createLinkPlugin()\n        this.plugins = [\n            this.inlineToolbarPlugin,\n            this.linkPlugin,\n        ]\n\n        let d = convertFromHTML(p.data)\n        \n        this.state = {\n            editor: d.contentBlocks ? EditorState.createWithContent(\n                ContentState.createFromBlockArray(d.contentBlocks, d.entityMap)\n            ) : EditorState.createEmpty(),\n        }\n    }\n    handlePress = e => {\n        e.stopPropagation()\n    }\n    onChange = val => {\n        this.setState({ editor: val })\n\n        let html = stateToHTML(this.state.editor.getCurrentContent())\n\n        this.props.onChange(html)\n    }\n    render() {\n        return <div>\n            <Editor\n                editorState={this.state.editor}\n                onChange={this.onChange}\n                decorators={decorators}\n                plugins={this.plugins}\n            />\n            <this.inlineToolbarPlugin.InlineToolbar>\n                {extProps => <>\n                    <BoldButton {...extProps} />\n                    <ItalicButton {...extProps} />\n                    <UnderlineButton {...extProps} />\n                    <this.linkPlugin.LinkButton {...extProps} />\n                </>}\n            </this.inlineToolbarPlugin.InlineToolbar>\n        </div>\n    }\n}\n\nexport default EditorComponent","import { navigate } from '@reach/router';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Header, Segment } from 'semantic-ui-react';\nimport { setSelftext, setIncludeSelftext } from '../redux/actions';\nimport EditorComponent from './EditorComponent';\n\nclass Selftext extends Component {\n    onSubmit = e => {\n        e.preventDefault()\n\n        navigate('/video/comments')\n    }\n    onChangeSelftext = value => {\n        this.props.setSelftext(value)\n    }\n    onChangeInclude = (e, { checked }) => {\n        this.props.setIncludeSelftext(checked)\n    }\n    render() {\n        return (\n            <Segment>\n                <Form onSubmit={this.onSubmit}>\n                    <Header size=\"large\">Edit selftext</Header>\n                    <Form.Checkbox label=\"Include selftext?\" checked={this.props.includeSelftext} onChange={this.onChangeInclude} />\n                    <Segment style={{ display: this.props.includeSelftext ? 'block' : 'none' }}>\n                        <EditorComponent onChange={this.onChangeSelftext} data={this.props.selftext} />\n                    </Segment>\n                    <Form.Button type=\"submit\">Submit</Form.Button>\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nexport default connect(state => ({\n    selftext: state.question.selftext_html || \"\",\n    includeSelftext: state.question.includeSelftext,\n}), { setSelftext, setIncludeSelftext })(Selftext);","import React, { Component } from 'react';\nimport { Button, Container } from 'semantic-ui-react';\nimport { postRender } from '../api';\n\nclass Final extends Component {\n    send = () => {\n        postRender()\n    }\n    render() {\n\n        return (\n            <Container textAlign=\"left\">\n                {/* <Settings /> */}\n                <Button onClick={this.send}>Render</Button>\n            </Container>\n        )\n    }\n}\n\nexport default Final","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Segment, Header } from 'semantic-ui-react';\nimport { calculateCommentList, estimateCommentHtml } from './estimate';\n\nfunction readableTime(timeInSeconds) {\n    let mins = Math.floor(timeInSeconds / 60)\n    let hours = Math.floor(mins / 60)\n    mins -= hours * 60\n\n    let seconds = Math.floor(timeInSeconds) - mins * 60 - hours * 60\n\n    let str = \"\"\n    if (hours > 0) {\n        str += hours + \" h, \"\n    }\n    if (mins > 0) {\n        str += mins + \" m, \"\n    }\n    str += seconds + \" s\"\n\n    return str\n}\n\nclass TimeEstimator extends Component {\n    render() {\n        let time = calculateCommentList(this.props.comments)\n\n        if (this.props.question.includeSelftext && this.props.question.selftext_html) {\n            let selftext = this.props.question.selftext_html\n            time += estimateCommentHtml(selftext).estimate\n        }\n\n        return (\n            <Segment>\n                <Header>\n                    <Header.Content>Current time: {readableTime(time)}</Header.Content>\n                </Header>\n                Comments: {this.props.comments.filter(c => c.enabled).length}\n            </Segment>\n        )\n    }\n}\n\nexport default connect(state => ({\n    comments: state.comments,\n    question: state.question,\n}))(TimeEstimator);","import { Redirect, Router } from '@reach/router'\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container } from 'semantic-ui-react'\nimport SelectThread from './ChooseThread'\nimport PickComments from './PickComments/index'\nimport Question from './Question'\nimport Settings from './Settings'\nimport SelfText from './SelfText'\nimport Final from './Final'\n\nimport 'draft-js-inline-toolbar-plugin/lib/plugin.css'\nimport TimeEstimator from './TimeEstimator'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Router>\n\t\t\t\t\t<Settings path=\"/\" />\n\t\t\t\t\t<SelectThread path=\"/thread\" />\n\t\t\t\t\t{/* Can't have fragments in Router element */}\n\t\t\t\t\t{this.props.question && <Question path=\"/post\" />}\n\t\t\t\t\t{this.props.question && <SelfText path=\"/selftext\" />}\n\t\t\t\t\t{this.props.question && <PickComments path=\"/comments\" />}\n\t\t\t\t\t{this.props.question && <Final path=\"/final\" />}\n\t\t\t\t\t<Redirect default from=\"*\" to=\"/video/\" noThrow />\n\t\t\t\t</Router>\n\t\t\t\t{this.props.question && <TimeEstimator />}\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nlet mapStateToProps = store => {\n\treturn {\n\t\tquestion: store.question,\n\t}\n}\n\nexport default connect(mapStateToProps)(App)","import { navigate } from '@reach/router'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Form, Segment } from 'semantic-ui-react'\nimport { deleteTheme, editTheme, getTheme, uploadThemeFiles } from '../api'\n\nlet voices = [\n    {\n        value: \"daniel\",\n        text: \"Daniel UK\"\n    },\n    {\n        value: \"google-us\",\n        text: \"Google US\"\n    },\n]\n\nclass Theme extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: \"\",\n            voice: \"\",\n\n            // Files\n            intro: null,\n            transition: null,\n            outro: null,\n\n            loading: true,\n        }\n    }\n    componentDidMount() {\n        getTheme(this.props.themeId)\n            .then(theme => {\n                console.log(theme)\n                this.setState(theme)\n            })\n    }\n    delete = async () => {\n        await deleteTheme(this.props.themeId)\n        navigate('/', { replace: true })\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    handleFileChange = (e, { name }) => this.setState({ [name]: e.target.files[0] })\n    submit = () => {\n        this.setState({ loading: true })\n        editTheme(this.props.themeId, {\n            name: this.state.name,\n            voice: this.state.voice,\n        }).then(async () => {\n            const { intro, transition, outro } = this.state\n\n            // If at least one file has been selected, upload it/them.\n            if (intro || transition || outro) {\n                const data = new FormData()\n\n                intro && data.append('intro', intro)\n                outro && data.append('outro', outro)\n                transition && data.append('transition', transition)\n\n                await uploadThemeFiles(this.props.themeId, data)\n\n                this.setState({ loading: false })\n            } else {\n                this.setState({ loading: false })\n            }\n        })\n    }\n    render() {\n        return (\n            <Container>\n                <Form onSubmit={this.submit}>\n                    <Segment>\n                        <Form.Group inline>\n                            <Form.Input\n                                name=\"name\"\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={this.state.name}\n                                onChange={this.handleChange}>\n                            </Form.Input>\n                            <Form.Select\n                                name=\"voice\"\n                                placeholder=\"Voice\"\n                                value={this.state.voice}\n                                options={voices}\n                                onChange={this.handleChange}>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group inline>\n                            <Form.Input\n                                name=\"intro\"\n                                type=\"file\"\n                                label=\"Intro\"\n                                onChange={this.handleFileChange}>\n                            </Form.Input>\n                            <Form.Input\n                                name=\"transition\"\n                                type=\"file\"\n                                label=\"Transition\"\n                                onChange={this.handleFileChange}>\n                            </Form.Input>\n                            <Form.Input\n                                name=\"outro\"\n                                type=\"file\"\n                                label=\"Outro\"\n                                onChange={this.handleFileChange}>\n                            </Form.Input>\n                            {/* <FileInput\n                                name=\"outro\"\n                                label=\"Outro\"\n                                onChange={this.handleFileChange} /> */}\n                        </Form.Group>\n                        <Form.Group inline>\n                            <Form.Button type=\"submit\">Save</Form.Button>\n                            <Form.Button type=\"button\" color=\"red\" onClick={this.delete}>Delete</Form.Button>\n                        </Form.Group>\n                    </Segment>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = store => {\n    return {\n        themes: store.themes,\n    }\n}\n\nexport default connect(mapStateToProps)(Theme);","import React, { Component } from 'react'\nimport { CardElement, injectStripe } from 'react-stripe-elements'\nimport { Form, Header, Segment } from 'semantic-ui-react'\n\nclass StripeInput extends Component {\n    state = {\n        error: null,\n    }\n    submit = async ev => {\n        let { token, error } = await this.props.stripe.createToken({ name: \"Name\" })\n        this.setState({ error: null })\n\n        if (error) {\n            console.error(error)\n            this.setState({ error })\n        } else {\n            this.props.onPurchase(token)\n        }\n    }\n    render() {\n        return (\n            <Form onSubmit={this.submit}>\n                <Segment raised>\n                    <CardElement id=\"card-element\" />\n                </Segment>\n                {this.state.error && <Header style={{ marginTop: 15 }} color=\"red\" size=\"small\">{this.state.error.message}</Header>}\n                <Form.Button>Proceed</Form.Button>\n            </Form>\n        )\n    }\n}\n\nexport default injectStripe(StripeInput)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Elements } from 'react-stripe-elements'\nimport { Container, Segment, Grid, Input, Form } from 'semantic-ui-react'\nimport Credits from '../Credits'\nimport StripeInput from './StripeInput'\nimport { buyCredits } from '../api'\n\nclass BuyCredits extends React.Component {\n    state = {\n        normalCredits: 10,\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    componentDidMount() {\n        // getCredits()\n    }\n    onPurchase = (token) => {\n        buyCredits(token)\n    }\n    render() {\n        return (\n            <Container>\n                <Credits />\n                <Grid>\n                    <Grid.Column width={8}>\n                        <Segment>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column width={8}>\n                        <Segment>\n                            <Form>\n                                <Form.Input label=\"Credits\" type=\"number\" name=\"normalCredits\" value={this.state.normalCredits} onChange={this.handleChange} />\n                            </Form>\n                            <Elements>\n                                <StripeInput onPurchase={this.onPurchase} />\n                            </Elements>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = store => {\n    return {\n        credits: store.credits,\n    }\n}\n\nexport default connect(mapStateToProps)(BuyCredits);","import React from 'react';\n\nimport { connect } from 'react-redux'\nimport { Router, Redirect } from '@reach/router'\n\nimport Dashboard from './Dashboard/index'\nimport Login from './Login'\nimport Register from './Register'\nimport Logout from './Logout'\nimport App from './render/App'\nimport ThemeEdit from './Themes/_id'\nimport 'semantic-ui-css/semantic.min.css'\nimport BuyCredits from './BuyCredits';\n\nconst NotFound = ({ redirect = \"/\" }) => <Redirect noThrow from=\"*\" to={redirect} />\n\nclass BogRouter extends React.Component {\n    render() {\n        return (\n            this.props.loggedIn ?\n                <Router>\n                    <Dashboard path=\"/\" />\n                    <BuyCredits path=\"/buy-credits\" />\n                    <App path=\"/video/*\" />\n                    <ThemeEdit path=\"/themes/:themeId\" />\n                    <Logout path=\"/logout\" />\n                    <NotFound default />\n                </Router> :\n                <Router>\n                    <Register path=\"/register\" />\n                    <Login path=\"/login\" />\n                    <NotFound default redirect=\"/login\" />\n                </Router>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n})\n\nexport default connect(mapStateToProps)(BogRouter)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport store from './redux/store';\nimport * as serviceWorker from './render/serviceWorker';\nimport Router from './Router';\nimport { StripeProvider } from 'react-stripe-elements';\n\nReactDOM.render(\n\t<StripeProvider apiKey=\"pk_test_L7TCDB8LinfbSK3OzvaoaXEj00z2dt6HgK\">\n\t\t<Provider store={store}>\n\t\t\t<Router />\n\t\t</Provider>\n\t</StripeProvider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}