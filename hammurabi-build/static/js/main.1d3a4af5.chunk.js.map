{"version":3,"sources":["api.js","PickComments/Comment.js","PickComments/index.js","SelectThread.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["getSongs","fetch","apiurl","then","r","json","Comment","body_html","this","props","data","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","React","Component","PickComments","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","settings","comments","map","comment","enabled","state","current","onSubmit","bind","assertThisInitialized","handle","toggleCurrent","handleKeyEvent","e","console","log","code","goPrev","goNext","window","addEventListener","removeEventListener","setState","length","filt","filter","d","onSelection","id","chosen","has","set","add","opt","_this2","selectedComments","PickComments_Comment","type","checked","onChange","disabled","onClick","style","width","value","Math","max","parseInt","target","Thread","thread","preventDefault","placeholder","autoFocus","Settings","song","songs","changeSong","key","App","stage","question","processed","options","getThread","commentData","questionData","method","body","JSON","stringify","sendToRender","SelectThread","fetchThread","src_PickComments_0","commentsDone","src_Settings","addSettings","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d3a4af5.chunk.js","sourcesContent":["let apiurl = '/api' // use current web page as host\n\nexport let getThread = function (thread) {\n\treturn fetch(apiurl + '/get-thread/' + thread)\n\t\t.then(r => r.json())\n}\n\nexport let getSongs = function () {\n\treturn fetch(apiurl + '/get-songs')\n\t\t.then(r => r.json())\n}\n\nexport let sendToRender = function (questionData, commentData, options) {\n\treturn fetch(apiurl + '/render-video', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tquestionData,\n\t\t\tcommentData,\n\t\t\toptions,\n\t\t})\n\t})\n\t\t.then(r => r.json())\n}","import React from 'react'\n\nclass Comment extends React.Component {\n\trender() {\n\t\tlet { body_html } = this.props.data\n\t\treturn (\n\t\t\t<div className=\"Comment\" dangerouslySetInnerHTML={{ __html: body_html }}>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Comment;","import React from 'react'\nimport Comment from './Comment'\nimport './index.css'\n\nclass PickComments extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\t// Put the comments into a map for easier indexing later\n\t\tlet settings = props.comments.map((comment) => {\n\t\t\treturn { enabled: false, data: comment }\n\t\t})\n\n\t\tthis.state = { current: 0, settings }\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t\tthis.handle = this.handle.bind(this)\n\t\tthis.toggleCurrent = this.toggleCurrent.bind(this)\n\t\tthis.handleKeyEvent = this.handleKeyEvent.bind(this)\n\t}\n\thandleKeyEvent(e) {\n\t\tconsole.log(e.code)\n\t\tswitch (e.code) {\n\t\t\tcase \"KeyA\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tthis.goPrev()\n\t\t\t\tbreak;\n\t\t\tcase \"KeyD\":\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tthis.goNext()\n\t\t\t\tbreak\n\t\t\tcase \"KeyE\":\n\t\t\tcase \"Space\":\n\t\t\t\tthis.toggleCurrent()\n\t\t\t\tbreak\n\t\t\tcase \"Enter\":\n\t\t\t\tthis.onSubmit()\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', this.handleKeyEvent)\n\t}\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('keydown', this.handleKeyEvent)\n\t}\n\tgoPrev() {\n\t\tif (this.state.current > 0) {\n\t\t\tthis.setState({ current: this.state.current - 1 })\n\t\t}\n\t}\n\tgoNext() {\n\t\tif (this.state.current < this.state.settings.length - 1) {\n\t\t\tthis.setState({ current: this.state.current + 1 })\n\t\t}\n\t}\n\tonSubmit() {\n\t\tlet filt = this.state.settings.filter(d => d.enabled)\n\t\tthis.props.onSelection(filt)\n\t}\n\thandle(id) {\n\t\tif (this.state.chosen.has(id)) {\n\t\t\tthis.state.chosen.set(id)\n\t\t} else {\n\t\t\tthis.state.chosen.add(id)\n\t\t}\n\t\tthis.setState({\n\t\t\tchosen: this.state.chosen,\n\t\t})\n\t}\n\ttoggleCurrent() {\n\t\tlet set = this.state.settings\n\n\t\tlet opt = set[this.state.current]\n\t\topt.enabled = !opt.enabled\n\t\tset[this.state.current] = opt\n\n\t\tconsole.log(set[this.state.current])\n\n\t\tthis.setState({\n\t\t\tsettings: set,\n\t\t})\n\t}\n\trender() {\n\t\t// Settings:\n\t\t// Enable\n\t\t// Keep edits\n\t\tlet comment = this.state.settings[this.state.current].data\n\t\tlet selectedComments = this.state.settings.filter(d => d.enabled).length\n\t\treturn (\n\t\t\t<div className=\"Comments\">\n\t\t\t\t{\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Comment data={comment} />\n\t\t\t\t\t\t<div className=\"options\">\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={this.state.settings[this.state.current].enabled} onChange={this.toggleCurrent.bind(this)} />\n\t\t\t\t\t\t\t\tEnable\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button disabled={this.state.current <= 0} onClick={this.goPrev.bind(this)}>Prev</button>\n\t\t\t\t\t\t\t<input style={{ width: 60 }} type=\"number\" value={this.state.current + 1} onChange={e => this.setState({ current: Math.max(0, parseInt(e.target.value) - 1 || 0) })} />\n\t\t\t\t\t\t\t<button disabled={this.state.current > this.state.settings.length} onClick={this.goNext.bind(this)}>Next</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<span>{selectedComments} {selectedComments === 1 ? 'comment' : 'comments'} selected</span>\n\t\t\t\t\t\t\t<button onClick={this.onSubmit}>Finish</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PickComments;","import React from 'react'\n\nclass Thread extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tthread: ''\n\t\t}\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault()\n\t\tthis.props.onSelection(this.state.thread)\n\t}\n\thandle(e) {\n\t\tthis.setState({ thread: e.target.value })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Thread\">\n\t\t\t\t<h1>Choose a thread</h1>\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<input value={this.state.thread} onChange={this.handle.bind(this)} placeholder=\"Choose a thread\" autoFocus />\n\t\t\t\t\t<button>OK</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Thread;","import React from 'react'\nimport { getSongs } from './api';\n\nclass Settings extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = { song: null, songs: null }\n\n\t\tgetSongs().then(songs => {\n\t\t\tthis.setState({ songs, song: songs[0] })\n\t\t})\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault()\n\t\tthis.props.onSelection({\n\t\t\tsong: this.state.song,\n\t\t})\n\t}\n\tchangeSong(e) {\n\t\tconsole.log(e.target.value)\n\t}\n\trender() {\n\t\t// Settings:\n\t\t// Song\n\t\t// TODO: dark/light style\n\t\t// TODO: Multiple styles (different channels)\n\n\t\treturn (\n\t\t\t<div className=\"Thread\">\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.songs &&\n\t\t\t\t\t\t<select onChange={this.changeSong.bind(this)}>\n\t\t\t\t\t\t\t{this.state.songs.map(song => <option key={song}>{song}</option>)}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button type=\"submit\">Send to the slaughterhouse</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Settings;","import React from 'react';\nimport { getThread, sendToRender } from './api';\nimport './App.css';\nimport PickComments from './PickComments/index';\nimport SelectThread from './SelectThread';\nimport Settings from './Settings';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { stage: 0, comments: [], question: null, processed: null, options: { song: null } }\n\t}\n\tfetchThread(thread) {\n\t\tgetThread(thread)\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestion: json[0],\n\t\t\t\t\tcomments: json[1],\n\t\t\t\t\tstage: 1,\n\t\t\t\t})\n\t\t\t})\n\t}\n\tcommentsDone(commentData) {\n\t\tconsole.log(commentData)\n\t\tthis.setState({ processed: commentData, stage: 2 })\n\t}\n\taddSettings(options) {\n\t\tthis.setState({ options, stage: 3 })\n\n\t\tsendToRender(this.state.question, this.state.processed, options)\n\t}\n\trender() {\n\t\tif (this.state.stage === 0) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<SelectThread onSelection={this.fetchThread.bind(this)} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.state.stage === 1) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<PickComments onSelection={this.commentsDone.bind(this)} comments={this.state.comments} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.state.stage === 2) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Settings onSelection={this.addSettings.bind(this)} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.state.stage === 3) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>rendering atm bro</h1>\n\t\t\t\t\t<p>You may close this tab</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}